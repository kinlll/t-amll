2020-06-08 00:09:46.588  INFO 6636 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-08 00:09:46.614  INFO 6636 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-06-08 00:09:46.621  INFO 6636 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-06-08 12:47:47.790  INFO 5324 --- [restartedMain] com.kinl.tmall.TMallApplication          : Starting TMallApplication on linkaijia with PID 5324 (D:\t-mall\t-amll\target\classes started by linkaijia in D:\t-mall\t-amll)
2020-06-08 12:47:47.792 DEBUG 5324 --- [restartedMain] com.kinl.tmall.TMallApplication          : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2020-06-08 12:47:47.793  INFO 5324 --- [restartedMain] com.kinl.tmall.TMallApplication          : No active profile set, falling back to default profiles: default
2020-06-08 12:47:47.828  INFO 5324 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-08 12:47:47.829  INFO 5324 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-08 12:47:49.087  INFO 5324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-08 12:47:49.089  INFO 5324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-08 12:47:49.139  INFO 5324 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces.
2020-06-08 12:47:49.355  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'webShiroConfig' of type [com.kinl.tmall.configuration.WebShiroConfig$$EnhancerBySpringCGLIB$$c8cd17a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.450  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userWebShiroRealm' of type [com.kinl.tmall.Realm.UserWebShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.453  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.479  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.483  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e98fbc83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.484  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.493  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.532  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.980  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.983  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.984  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.986  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminMapper' of type [com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.986  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminServiceImpl' of type [com.kinl.tmall.service.impl.SysAdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.987  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'adminWebShiroRealm' of type [com.kinl.tmall.Realm.AdminWebShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.988  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'customizedModularRealmAuthenticator' of type [com.kinl.tmall.configuration.CustomizedModularRealmAuthenticator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:49.991  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:50.063  INFO 5324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 12:47:50.872  INFO 5324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-08 12:47:50.882  INFO 5324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-08 12:47:50.882  INFO 5324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-06-08 12:47:51.029  INFO 5324 --- [restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-06-08 12:47:51.035  INFO 5324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-08 12:47:51.035  INFO 5324 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3206 ms
2020-06-08 12:47:51.976  INFO 5324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-08 12:47:52.767  INFO 5324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-06-08 12:47:52.838  INFO 5324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-08 12:47:52.842  INFO 5324 --- [restartedMain] com.kinl.tmall.TMallApplication          : Started TMallApplication in 5.552 seconds (JVM running for 8.293)
2020-06-08 12:47:53.015  INFO 5324 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-08 12:47:53.015  INFO 5324 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-08 12:47:53.028  INFO 5324 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-06-08 12:48:01.328  INFO 5324 --- [http-nio-8080-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-08 12:48:01.879  INFO 5324 --- [http-nio-8080-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-08 12:48:01.885 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:48:01.899 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:48:01.951 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:48:01.987 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:48:01.987 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:48:02.026 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:48:02.027 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:48:02.027 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:48:02.068 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:48:02.074 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:48:02.074 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:48:02.113 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:48:02.114 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:48:02.114 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:48:02.154 DEBUG 5324 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:48:02.160  INFO 5324 --- [http-nio-8080-exec-10] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/listCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.AdminPageController.editCategory', args=[]}
2020-06-08 12:48:02.162  INFO 5324 --- [http-nio-8080-exec-10] com.kinl.tmall.aspect.LogAspect          : result : admin/listCategory
2020-06-08 12:48:02.348 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:48:02.349 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:48:02.388 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:48:02.388 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:48:02.389 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:48:02.428 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:48:02.431 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:48:02.431 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:48:02.470 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:48:02.471 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:48:02.471 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:48:02.510 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:48:02.510  INFO 5324 --- [http-nio-8080-exec-8] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/pageCategory', ip='127.0.0.1', classMethod='com.kinl.tmall.controller.admin.CategoryController.pageCategory', args=[5, 0]}
2020-06-08 12:48:02.516 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.CategoryMapper.queryList   : ==>  Preparing: select * from category limit ?,? 
2020-06-08 12:48:02.517 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.CategoryMapper.queryList   : ==> Parameters: 0(Integer), 5(Integer)
2020-06-08 12:48:02.555 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.CategoryMapper.queryList   : <==      Total: 5
2020-06-08 12:48:02.578 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.CategoryMapper.queryCount  : ==>  Preparing: select count(1) from category 
2020-06-08 12:48:02.579 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.CategoryMapper.queryCount  : ==> Parameters: 
2020-06-08 12:48:02.617 DEBUG 5324 --- [http-nio-8080-exec-8] c.k.tmall.dao.CategoryMapper.queryCount  : <==      Total: 1
2020-06-08 12:48:02.617  INFO 5324 --- [http-nio-8080-exec-8] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=com.kinl.tmall.Utils.Page@6261550f)
2020-06-08 12:48:26.125  INFO 5324 --- [http-nio-8080-exec-10] c.k.t.h.ControllerExceptionHandler       : RequestUrl : http://localhost:8080/admin/pageCategory, Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "NaN"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.NumberFormatException: For input string: "NaN"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)
	at java.base/java.lang.Integer.parseInt(Integer.java:652)
	at java.base/java.lang.Integer.valueOf(Integer.java:983)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 57 common frames omitted

2020-06-08 12:48:26.125  WARN 5324 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "NaN"]
2020-06-08 12:53:13.860 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:53:13.860 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:53:13.902 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:53:13.903 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:53:13.903 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:53:13.942 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:53:13.943 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:53:13.943 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:53:13.990 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:53:13.991 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:53:13.991 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:53:14.030 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:53:14.031  INFO 5324 --- [http-nio-8080-exec-6] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/listCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.AdminPageController.editCategory', args=[]}
2020-06-08 12:53:14.031  INFO 5324 --- [http-nio-8080-exec-6] com.kinl.tmall.aspect.LogAspect          : result : admin/listCategory
2020-06-08 12:53:14.200 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:53:14.201 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:53:14.240 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:53:14.242 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:53:14.242 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:53:14.283 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:53:14.284 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 12:53:14.284 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 12:53:14.323 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 12:53:14.323 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 12:53:14.323 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 12:53:14.362 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 12:53:14.362  INFO 5324 --- [http-nio-8080-exec-6] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/pageCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.CategoryController.pageCategory', args=[5, 0]}
2020-06-08 12:53:14.363 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.CategoryMapper.queryList   : ==>  Preparing: select * from category limit ?,? 
2020-06-08 12:53:14.363 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.CategoryMapper.queryList   : ==> Parameters: 0(Integer), 5(Integer)
2020-06-08 12:53:14.401 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.CategoryMapper.queryList   : <==      Total: 5
2020-06-08 12:53:14.402 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.CategoryMapper.queryCount  : ==>  Preparing: select count(1) from category 
2020-06-08 12:53:14.403 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.CategoryMapper.queryCount  : ==> Parameters: 
2020-06-08 12:53:14.443 DEBUG 5324 --- [http-nio-8080-exec-6] c.k.tmall.dao.CategoryMapper.queryCount  : <==      Total: 1
2020-06-08 12:53:14.444  INFO 5324 --- [http-nio-8080-exec-6] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=com.kinl.tmall.Utils.Page@352ff47e)
2020-06-08 12:53:21.393  INFO 5324 --- [http-nio-8080-exec-3] c.k.t.h.ControllerExceptionHandler       : RequestUrl : http://localhost:8080/admin/pageCategory, Exception : {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "NaN"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.NumberFormatException: For input string: "NaN"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)
	at java.base/java.lang.Integer.parseInt(Integer.java:652)
	at java.base/java.lang.Integer.valueOf(Integer.java:983)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 57 common frames omitted

2020-06-08 12:53:21.394  WARN 5324 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "NaN"]
2020-06-08 13:25:46.898  INFO 5324 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-08 13:25:46.948  INFO 5324 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-06-08 13:25:46.953  INFO 5324 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-06-08 19:27:18.335  INFO 7484 --- [restartedMain] com.kinl.tmall.TMallApplication          : Starting TMallApplication on linkaijia with PID 7484 (D:\t-mall\t-amll\target\classes started by linkaijia in D:\t-mall\t-amll)
2020-06-08 19:27:18.347 DEBUG 7484 --- [restartedMain] com.kinl.tmall.TMallApplication          : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2020-06-08 19:27:18.348  INFO 7484 --- [restartedMain] com.kinl.tmall.TMallApplication          : No active profile set, falling back to default profiles: default
2020-06-08 19:27:18.477  INFO 7484 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-08 19:27:18.478  INFO 7484 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-08 19:27:20.084  INFO 7484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-08 19:27:20.087  INFO 7484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-08 19:27:20.257  INFO 7484 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 113ms. Found 0 Redis repository interfaces.
2020-06-08 19:27:20.602  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'webShiroConfig' of type [com.kinl.tmall.configuration.WebShiroConfig$$EnhancerBySpringCGLIB$$3f8d78f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:20.977  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userWebShiroRealm' of type [com.kinl.tmall.Realm.UserWebShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:20.981  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.008  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.015  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1c906402] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.016  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.024  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.068  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.584  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.594  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.596  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.597  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminMapper' of type [com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.598  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminServiceImpl' of type [com.kinl.tmall.service.impl.SysAdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.598  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'adminWebShiroRealm' of type [com.kinl.tmall.Realm.AdminWebShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.599  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'customizedModularRealmAuthenticator' of type [com.kinl.tmall.configuration.CustomizedModularRealmAuthenticator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.602  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:21.648  INFO 7484 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:27:22.566  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-08 19:27:22.586  INFO 7484 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-08 19:27:22.587  INFO 7484 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-06-08 19:27:22.918  INFO 7484 --- [restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-06-08 19:27:22.925  INFO 7484 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-08 19:27:22.926  INFO 7484 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4448 ms
2020-06-08 19:27:24.126  INFO 7484 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-08 19:27:24.918  INFO 7484 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-06-08 19:27:24.987  INFO 7484 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-08 19:27:24.990  INFO 7484 --- [restartedMain] com.kinl.tmall.TMallApplication          : Started TMallApplication in 7.289 seconds (JVM running for 11.135)
2020-06-08 19:27:31.506  INFO 7484 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-08 19:27:31.506  INFO 7484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-08 19:27:31.524  INFO 7484 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 18 ms
2020-06-08 19:27:31.678  INFO 7484 --- [http-nio-8080-exec-1] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/home', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.web.UserJumpController.home', args=[]}
2020-06-08 19:27:31.682  INFO 7484 --- [http-nio-8080-exec-1] com.kinl.tmall.aspect.LogAspect          : result : fore/home
2020-06-08 19:27:32.853  INFO 7484 --- [http-nio-8080-exec-2] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/web/forehome', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.web.IndexController.index', args=[]}
2020-06-08 19:27:32.890  INFO 7484 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-08 19:27:33.616  INFO 7484 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-08 19:27:33.632 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.finAllVO    : ==>  Preparing: select * from category 
2020-06-08 19:27:33.649 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.finAllVO    : ==> Parameters: 
2020-06-08 19:27:33.716 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.finAllVO    : <==      Total: 17
2020-06-08 19:27:33.720 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:33.720 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 60(Integer)
2020-06-08 19:27:33.770 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:33.771 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:33.771 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 958(Integer)
2020-06-08 19:27:33.818 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:33.820 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:33.821 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 958(Integer)
2020-06-08 19:27:33.869 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:33.870 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:33.870 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 958(Integer)
2020-06-08 19:27:33.916 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:33.917 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:33.917 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 959(Integer)
2020-06-08 19:27:33.964 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:33.964 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:33.965 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 959(Integer)
2020-06-08 19:27:34.011 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.011 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.012 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 959(Integer)
2020-06-08 19:27:34.058 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.059 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.059 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 960(Integer)
2020-06-08 19:27:34.109 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:34.110 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:34.110 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 960(Integer)
2020-06-08 19:27:34.158 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.158 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.159 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 960(Integer)
2020-06-08 19:27:34.203 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.204 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.204 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 961(Integer)
2020-06-08 19:27:34.250 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:34.251 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:34.251 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 961(Integer)
2020-06-08 19:27:34.299 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.299 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.300 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 961(Integer)
2020-06-08 19:27:34.349 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.350 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.351 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 962(Integer)
2020-06-08 19:27:34.399 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:34.399 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:34.400 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 962(Integer)
2020-06-08 19:27:34.449 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.450 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 962(Integer)
2020-06-08 19:27:34.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:34.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 64(Integer)
2020-06-08 19:27:34.551 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:34.551 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.551 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 899(Integer)
2020-06-08 19:27:34.600 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:34.601 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:34.601 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 899(Integer)
2020-06-08 19:27:34.647 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.648 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.648 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 899(Integer)
2020-06-08 19:27:34.692 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.692 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.693 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 900(Integer)
2020-06-08 19:27:34.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:34.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:34.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 900(Integer)
2020-06-08 19:27:34.785 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.786 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.787 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 900(Integer)
2020-06-08 19:27:34.833 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.833 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.834 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 901(Integer)
2020-06-08 19:27:34.881 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:34.881 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:34.881 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 901(Integer)
2020-06-08 19:27:34.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:34.931 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:34.931 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 901(Integer)
2020-06-08 19:27:34.977 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:34.977 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:34.977 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 902(Integer)
2020-06-08 19:27:35.022 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.022 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.022 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 902(Integer)
2020-06-08 19:27:35.069 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.070 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.070 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 902(Integer)
2020-06-08 19:27:35.117 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:35.117 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:35.117 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 903(Integer)
2020-06-08 19:27:35.161 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.162 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.162 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 903(Integer)
2020-06-08 19:27:35.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 903(Integer)
2020-06-08 19:27:35.254 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:35.254 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:35.254 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 68(Integer)
2020-06-08 19:27:35.302 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:35.302 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:35.302 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 844(Integer)
2020-06-08 19:27:35.351 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.351 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.351 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 844(Integer)
2020-06-08 19:27:35.399 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.400 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.400 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 844(Integer)
2020-06-08 19:27:35.449 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:35.450 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:35.450 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 845(Integer)
2020-06-08 19:27:35.498 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.498 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.499 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 845(Integer)
2020-06-08 19:27:35.545 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.545 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.545 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 845(Integer)
2020-06-08 19:27:35.592 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:35.593 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:35.593 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 846(Integer)
2020-06-08 19:27:35.641 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.641 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.641 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 846(Integer)
2020-06-08 19:27:35.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.691 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.691 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 846(Integer)
2020-06-08 19:27:35.739 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:35.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:35.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 847(Integer)
2020-06-08 19:27:35.784 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.784 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.784 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 847(Integer)
2020-06-08 19:27:35.831 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.831 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.832 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 847(Integer)
2020-06-08 19:27:35.879 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:35.880 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:35.880 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 848(Integer)
2020-06-08 19:27:35.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:35.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:35.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 848(Integer)
2020-06-08 19:27:35.979 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:35.980 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:35.980 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 848(Integer)
2020-06-08 19:27:36.028 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.029 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:36.029 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 69(Integer)
2020-06-08 19:27:36.075 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:36.075 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.076 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 784(Integer)
2020-06-08 19:27:36.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:36.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:36.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 784(Integer)
2020-06-08 19:27:36.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:36.171 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:36.171 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 784(Integer)
2020-06-08 19:27:36.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.221 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 785(Integer)
2020-06-08 19:27:36.270 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:36.270 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:36.270 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 785(Integer)
2020-06-08 19:27:36.316 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:36.316 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:36.316 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 785(Integer)
2020-06-08 19:27:36.360 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.361 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.361 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 786(Integer)
2020-06-08 19:27:36.406 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:36.406 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:36.406 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 786(Integer)
2020-06-08 19:27:36.450 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:36.450 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:36.450 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 786(Integer)
2020-06-08 19:27:36.496 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.496 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.497 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 787(Integer)
2020-06-08 19:27:36.539 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:36.540 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:36.540 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 787(Integer)
2020-06-08 19:27:36.584 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:36.584 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:36.584 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 787(Integer)
2020-06-08 19:27:36.630 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.630 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.630 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 788(Integer)
2020-06-08 19:27:36.679 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:36.679 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:36.679 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 788(Integer)
2020-06-08 19:27:36.721 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:36.721 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:36.721 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 788(Integer)
2020-06-08 19:27:36.770 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.770 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:36.770 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 71(Integer)
2020-06-08 19:27:36.821 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:36.821 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.821 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 729(Integer)
2020-06-08 19:27:36.870 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:36.871 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:36.871 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 729(Integer)
2020-06-08 19:27:36.919 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:36.919 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:36.919 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 729(Integer)
2020-06-08 19:27:36.961 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:36.962 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:36.962 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 730(Integer)
2020-06-08 19:27:37.009 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.010 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.010 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 730(Integer)
2020-06-08 19:27:37.059 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.059 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.060 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 730(Integer)
2020-06-08 19:27:37.110 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:37.111 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:37.111 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 731(Integer)
2020-06-08 19:27:37.160 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.160 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.160 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 731(Integer)
2020-06-08 19:27:37.210 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.210 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.210 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 731(Integer)
2020-06-08 19:27:37.259 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:37.260 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:37.260 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 732(Integer)
2020-06-08 19:27:37.300 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.300 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.301 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 732(Integer)
2020-06-08 19:27:37.348 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.348 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.348 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 732(Integer)
2020-06-08 19:27:37.391 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:37.391 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:37.391 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 733(Integer)
2020-06-08 19:27:37.439 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.439 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.439 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 733(Integer)
2020-06-08 19:27:37.490 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.490 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.490 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 733(Integer)
2020-06-08 19:27:37.540 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:37.540 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:37.540 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 72(Integer)
2020-06-08 19:27:37.590 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:37.591 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:37.591 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 673(Integer)
2020-06-08 19:27:37.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 673(Integer)
2020-06-08 19:27:37.689 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.689 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.689 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 673(Integer)
2020-06-08 19:27:37.738 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:37.738 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:37.739 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 674(Integer)
2020-06-08 19:27:37.779 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.780 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.780 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 674(Integer)
2020-06-08 19:27:37.827 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.828 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.828 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 674(Integer)
2020-06-08 19:27:37.870 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:37.870 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:37.870 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 675(Integer)
2020-06-08 19:27:37.919 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:37.920 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:37.920 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 675(Integer)
2020-06-08 19:27:37.970 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:37.970 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:37.970 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 675(Integer)
2020-06-08 19:27:38.019 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.019 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.020 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 676(Integer)
2020-06-08 19:27:38.062 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.062 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.062 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 676(Integer)
2020-06-08 19:27:38.110 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:38.110 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:38.110 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 676(Integer)
2020-06-08 19:27:38.160 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.160 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.160 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 677(Integer)
2020-06-08 19:27:38.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 677(Integer)
2020-06-08 19:27:38.259 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:38.260 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:38.260 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 677(Integer)
2020-06-08 19:27:38.304 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.304 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:38.305 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 73(Integer)
2020-06-08 19:27:38.354 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:38.354 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.354 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 620(Integer)
2020-06-08 19:27:38.401 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.401 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.401 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 620(Integer)
2020-06-08 19:27:38.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:38.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:38.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 620(Integer)
2020-06-08 19:27:38.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 621(Integer)
2020-06-08 19:27:38.548 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.548 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.549 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 621(Integer)
2020-06-08 19:27:38.596 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:38.596 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:38.597 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 621(Integer)
2020-06-08 19:27:38.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 622(Integer)
2020-06-08 19:27:38.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 622(Integer)
2020-06-08 19:27:38.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:38.741 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:38.741 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 622(Integer)
2020-06-08 19:27:38.785 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.786 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.786 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 623(Integer)
2020-06-08 19:27:38.829 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.830 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.830 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 623(Integer)
2020-06-08 19:27:38.879 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:38.880 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:38.880 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 623(Integer)
2020-06-08 19:27:38.929 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:38.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:38.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 624(Integer)
2020-06-08 19:27:38.979 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:38.979 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:38.979 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 624(Integer)
2020-06-08 19:27:39.022 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.022 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.023 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 624(Integer)
2020-06-08 19:27:39.071 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:39.071 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:39.071 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 74(Integer)
2020-06-08 19:27:39.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:39.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:39.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 565(Integer)
2020-06-08 19:27:39.169 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:39.169 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:39.169 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 565(Integer)
2020-06-08 19:27:39.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 565(Integer)
2020-06-08 19:27:39.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:39.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:39.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 566(Integer)
2020-06-08 19:27:39.320 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:39.320 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:39.320 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 566(Integer)
2020-06-08 19:27:39.369 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.369 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.369 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 566(Integer)
2020-06-08 19:27:39.420 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:39.420 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:39.420 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 567(Integer)
2020-06-08 19:27:39.468 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:39.469 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:39.469 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 567(Integer)
2020-06-08 19:27:39.514 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.514 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.514 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 567(Integer)
2020-06-08 19:27:39.557 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:39.558 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:39.561 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 568(Integer)
2020-06-08 19:27:39.607 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:39.607 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:39.607 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 568(Integer)
2020-06-08 19:27:39.652 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.652 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.652 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 568(Integer)
2020-06-08 19:27:39.696 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:39.697 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:39.697 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 569(Integer)
2020-06-08 19:27:39.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:39.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:39.741 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 569(Integer)
2020-06-08 19:27:39.790 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.790 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.790 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 569(Integer)
2020-06-08 19:27:39.835 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:39.835 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:39.835 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 75(Integer)
2020-06-08 19:27:39.882 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:39.882 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:39.882 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 509(Integer)
2020-06-08 19:27:39.927 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:39.927 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:39.928 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 509(Integer)
2020-06-08 19:27:39.974 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:39.974 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:39.974 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 509(Integer)
2020-06-08 19:27:40.022 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.023 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.023 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 510(Integer)
2020-06-08 19:27:40.069 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.069 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.070 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 510(Integer)
2020-06-08 19:27:40.119 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:40.120 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:40.120 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 510(Integer)
2020-06-08 19:27:40.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 511(Integer)
2020-06-08 19:27:40.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 511(Integer)
2020-06-08 19:27:40.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:40.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:40.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 511(Integer)
2020-06-08 19:27:40.318 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.319 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.319 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 512(Integer)
2020-06-08 19:27:40.369 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.369 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.369 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 512(Integer)
2020-06-08 19:27:40.417 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:40.417 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:40.417 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 512(Integer)
2020-06-08 19:27:40.463 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.464 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.464 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 513(Integer)
2020-06-08 19:27:40.511 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.511 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.511 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 513(Integer)
2020-06-08 19:27:40.562 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:40.562 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:40.563 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 513(Integer)
2020-06-08 19:27:40.610 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.610 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:40.610 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 76(Integer)
2020-06-08 19:27:40.660 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:40.660 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.660 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 449(Integer)
2020-06-08 19:27:40.709 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.710 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.710 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 449(Integer)
2020-06-08 19:27:40.759 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:40.759 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:40.759 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 449(Integer)
2020-06-08 19:27:40.805 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.805 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.805 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 450(Integer)
2020-06-08 19:27:40.849 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.849 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.850 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 450(Integer)
2020-06-08 19:27:40.897 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:40.897 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:40.897 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 450(Integer)
2020-06-08 19:27:40.943 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:40.943 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:40.943 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 451(Integer)
2020-06-08 19:27:40.989 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:40.989 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:40.990 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 451(Integer)
2020-06-08 19:27:41.035 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.035 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.035 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 451(Integer)
2020-06-08 19:27:41.082 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.082 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.082 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 452(Integer)
2020-06-08 19:27:41.129 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:41.129 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:41.130 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 452(Integer)
2020-06-08 19:27:41.180 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.180 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.180 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 452(Integer)
2020-06-08 19:27:41.228 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.228 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.228 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 453(Integer)
2020-06-08 19:27:41.275 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:41.275 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:41.275 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 453(Integer)
2020-06-08 19:27:41.322 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.322 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.322 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 453(Integer)
2020-06-08 19:27:41.368 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.368 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:41.368 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 77(Integer)
2020-06-08 19:27:41.412 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:41.413 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.413 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 429(Integer)
2020-06-08 19:27:41.460 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:41.460 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:41.460 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 429(Integer)
2020-06-08 19:27:41.508 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.509 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.509 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 429(Integer)
2020-06-08 19:27:41.553 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.553 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.553 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 430(Integer)
2020-06-08 19:27:41.600 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:41.600 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:41.600 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 430(Integer)
2020-06-08 19:27:41.647 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.648 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.648 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 430(Integer)
2020-06-08 19:27:41.692 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.692 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.692 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 431(Integer)
2020-06-08 19:27:41.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:41.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:41.741 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 431(Integer)
2020-06-08 19:27:41.789 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.790 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.790 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 431(Integer)
2020-06-08 19:27:41.838 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.839 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.839 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 432(Integer)
2020-06-08 19:27:41.884 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:41.885 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:41.885 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 432(Integer)
2020-06-08 19:27:41.932 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:41.932 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:41.932 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 432(Integer)
2020-06-08 19:27:41.980 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:41.981 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:41.981 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 433(Integer)
2020-06-08 19:27:42.029 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.029 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.029 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 433(Integer)
2020-06-08 19:27:42.080 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:42.080 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:42.080 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 433(Integer)
2020-06-08 19:27:42.125 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:42.125 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:42.125 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 78(Integer)
2020-06-08 19:27:42.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:42.171 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:42.171 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 373(Integer)
2020-06-08 19:27:42.216 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.217 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.217 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 373(Integer)
2020-06-08 19:27:42.261 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:42.261 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:42.261 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 373(Integer)
2020-06-08 19:27:42.307 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:42.308 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:42.308 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 374(Integer)
2020-06-08 19:27:42.353 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.353 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.353 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 374(Integer)
2020-06-08 19:27:42.401 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:42.402 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:42.402 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 374(Integer)
2020-06-08 19:27:42.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:42.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:42.451 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 375(Integer)
2020-06-08 19:27:42.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 375(Integer)
2020-06-08 19:27:42.545 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:42.545 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:42.545 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 375(Integer)
2020-06-08 19:27:42.590 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:42.590 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:42.590 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 376(Integer)
2020-06-08 19:27:42.639 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.640 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 376(Integer)
2020-06-08 19:27:42.684 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:42.684 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:42.685 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 376(Integer)
2020-06-08 19:27:42.731 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:42.731 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:42.731 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 377(Integer)
2020-06-08 19:27:42.779 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.779 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.779 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 377(Integer)
2020-06-08 19:27:42.821 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:42.821 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:42.822 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 377(Integer)
2020-06-08 19:27:42.871 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:42.872 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:42.872 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 79(Integer)
2020-06-08 19:27:42.917 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:42.918 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:42.918 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 317(Integer)
2020-06-08 19:27:42.961 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:42.962 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:42.962 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 317(Integer)
2020-06-08 19:27:43.009 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.009 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.009 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 317(Integer)
2020-06-08 19:27:43.052 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.052 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.052 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 318(Integer)
2020-06-08 19:27:43.096 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.097 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.097 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 318(Integer)
2020-06-08 19:27:43.142 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.143 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.143 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 318(Integer)
2020-06-08 19:27:43.190 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.190 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.190 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 319(Integer)
2020-06-08 19:27:43.234 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.234 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.234 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 319(Integer)
2020-06-08 19:27:43.278 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.278 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.278 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 319(Integer)
2020-06-08 19:27:43.321 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.322 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.322 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 320(Integer)
2020-06-08 19:27:43.368 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.368 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.368 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 320(Integer)
2020-06-08 19:27:43.410 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.410 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.410 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 320(Integer)
2020-06-08 19:27:43.457 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.457 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.457 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 321(Integer)
2020-06-08 19:27:43.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.500 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 321(Integer)
2020-06-08 19:27:43.550 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.551 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.551 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 321(Integer)
2020-06-08 19:27:43.599 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.599 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:43.600 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 80(Integer)
2020-06-08 19:27:43.646 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:43.647 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.647 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 262(Integer)
2020-06-08 19:27:43.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.690 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 262(Integer)
2020-06-08 19:27:43.739 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.740 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 262(Integer)
2020-06-08 19:27:43.789 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.789 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.789 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 263(Integer)
2020-06-08 19:27:43.834 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.834 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.834 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 263(Integer)
2020-06-08 19:27:43.880 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:43.880 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:43.881 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 263(Integer)
2020-06-08 19:27:43.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:43.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:43.930 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 264(Integer)
2020-06-08 19:27:43.980 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:43.980 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:43.980 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 264(Integer)
2020-06-08 19:27:44.023 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.024 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.024 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 264(Integer)
2020-06-08 19:27:44.070 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.070 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.070 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 265(Integer)
2020-06-08 19:27:44.117 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:44.117 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:44.117 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 265(Integer)
2020-06-08 19:27:44.161 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.161 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.161 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 265(Integer)
2020-06-08 19:27:44.208 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.209 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 266(Integer)
2020-06-08 19:27:44.251 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:44.251 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:44.251 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 266(Integer)
2020-06-08 19:27:44.300 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.300 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.300 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 266(Integer)
2020-06-08 19:27:44.350 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.350 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:44.350 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 81(Integer)
2020-06-08 19:27:44.397 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:44.398 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.398 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 202(Integer)
2020-06-08 19:27:44.441 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:44.442 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:44.442 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 202(Integer)
2020-06-08 19:27:44.489 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.489 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.489 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 202(Integer)
2020-06-08 19:27:44.532 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.532 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.532 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 203(Integer)
2020-06-08 19:27:44.580 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:44.580 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:44.580 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 203(Integer)
2020-06-08 19:27:44.630 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.630 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.630 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 203(Integer)
2020-06-08 19:27:44.680 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.681 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.681 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 204(Integer)
2020-06-08 19:27:44.727 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:44.727 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:44.727 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 204(Integer)
2020-06-08 19:27:44.769 DEBUG 7484 --- [http-nio-8080-exec-5] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:27:44.770 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.770 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.770 DEBUG 7484 --- [http-nio-8080-exec-5] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:27:44.771 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 204(Integer)
2020-06-08 19:27:44.817 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.817 DEBUG 7484 --- [http-nio-8080-exec-5] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:27:44.817 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.817 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 205(Integer)
2020-06-08 19:27:44.860 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:44.860 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:44.861 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 205(Integer)
2020-06-08 19:27:44.886 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:27:44.886 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:27:44.905 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:44.905 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:44.905 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 205(Integer)
2020-06-08 19:27:44.930 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:27:44.931 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:27:44.931 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:27:44.950 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:44.950 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:44.950 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 206(Integer)
2020-06-08 19:27:44.983 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:27:44.986 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:27:44.986 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:27:45.000 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.000 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.000 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 206(Integer)
2020-06-08 19:27:45.033 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:27:45.033 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:27:45.033 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:27:45.048 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.049 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.049 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 206(Integer)
2020-06-08 19:27:45.080 DEBUG 7484 --- [http-nio-8080-exec-6] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:27:45.081  INFO 7484 --- [http-nio-8080-exec-6] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/listCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.AdminPageController.editCategory', args=[]}
2020-06-08 19:27:45.082  INFO 7484 --- [http-nio-8080-exec-6] com.kinl.tmall.aspect.LogAspect          : result : admin/listCategory
2020-06-08 19:27:45.095 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:45.095 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:45.095 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 82(Integer)
2020-06-08 19:27:45.139 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:45.139 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:45.139 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 147(Integer)
2020-06-08 19:27:45.185 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.186 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.186 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 147(Integer)
2020-06-08 19:27:45.233 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.233 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.233 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 147(Integer)
2020-06-08 19:27:45.280 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:45.280 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:45.280 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 148(Integer)
2020-06-08 19:27:45.290 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:27:45.290 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:27:45.328 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.329 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.329 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 148(Integer)
2020-06-08 19:27:45.339 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:27:45.340 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:27:45.340 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:27:45.373 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.374 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.374 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 148(Integer)
2020-06-08 19:27:45.389 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:27:45.393 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:27:45.393 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:27:45.419 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:45.420 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:45.420 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 149(Integer)
2020-06-08 19:27:45.443 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:27:45.443 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:27:45.443 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:27:45.468 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.468 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.469 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 149(Integer)
2020-06-08 19:27:45.494 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:27:45.494  INFO 7484 --- [http-nio-8080-exec-1] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/pageCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.CategoryController.pageCategory', args=[5, 0]}
2020-06-08 19:27:45.500 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.CategoryMapper.queryList   : ==>  Preparing: select * from category limit ?,? 
2020-06-08 19:27:45.500 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.CategoryMapper.queryList   : ==> Parameters: 0(Integer), 5(Integer)
2020-06-08 19:27:45.517 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.517 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.517 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 149(Integer)
2020-06-08 19:27:45.550 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.CategoryMapper.queryList   : <==      Total: 5
2020-06-08 19:27:45.559 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:45.559 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:45.560 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 150(Integer)
2020-06-08 19:27:45.575 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.CategoryMapper.queryCount  : ==>  Preparing: select count(1) from category 
2020-06-08 19:27:45.575 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.CategoryMapper.queryCount  : ==> Parameters: 
2020-06-08 19:27:45.609 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.609 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.609 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 150(Integer)
2020-06-08 19:27:45.623 DEBUG 7484 --- [http-nio-8080-exec-1] c.k.tmall.dao.CategoryMapper.queryCount  : <==      Total: 1
2020-06-08 19:27:45.623  INFO 7484 --- [http-nio-8080-exec-1] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=com.kinl.tmall.Utils.Page@50422c14)
2020-06-08 19:27:45.653 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.653 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.653 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 150(Integer)
2020-06-08 19:27:45.700 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:45.700 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:45.700 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 151(Integer)
2020-06-08 19:27:45.749 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.749 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.749 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 151(Integer)
2020-06-08 19:27:45.796 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.796 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.796 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 151(Integer)
2020-06-08 19:27:45.844 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:45.844 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==>  Preparing: select * from product where cid=? 
2020-06-08 19:27:45.844 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : ==> Parameters: 83(Integer)
2020-06-08 19:27:45.890 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.tmall.dao.ProductMapper.findbyCid    : <==      Total: 5
2020-06-08 19:27:45.890 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:45.890 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 87(Integer)
2020-06-08 19:27:45.937 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:45.937 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:45.937 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 87(Integer)
2020-06-08 19:27:45.982 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:45.982 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:45.982 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 87(Integer)
2020-06-08 19:27:46.030 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:46.030 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:46.030 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 88(Integer)
2020-06-08 19:27:46.076 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:46.077 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:46.077 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 88(Integer)
2020-06-08 19:27:46.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:46.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:46.121 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 88(Integer)
2020-06-08 19:27:46.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:46.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:46.170 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 89(Integer)
2020-06-08 19:27:46.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:46.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:46.220 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 89(Integer)
2020-06-08 19:27:46.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:46.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:46.269 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 89(Integer)
2020-06-08 19:27:46.314 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:46.315 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:46.315 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 90(Integer)
2020-06-08 19:27:46.361 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:46.362 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:46.362 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 90(Integer)
2020-06-08 19:27:46.410 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:46.411 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:46.411 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 90(Integer)
2020-06-08 19:27:46.460 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:46.460 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==>  Preparing: select * from productimage where pid=? and type="单个图片" order by 'id' desc limit 0,1 
2020-06-08 19:27:46.460 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : ==> Parameters: 91(Integer)
2020-06-08 19:27:46.510 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findFirstImageByPid            : <==      Total: 0
2020-06-08 19:27:46.510 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==>  Preparing: select * from productimage where pid=? and type ="单个图片" 
2020-06-08 19:27:46.510 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : ==> Parameters: 91(Integer)
2020-06-08 19:27:46.557 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllSimpleByPid             : <==      Total: 0
2020-06-08 19:27:46.558 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==>  Preparing: select * from productimage where pid=? and type ="详情图片" 
2020-06-08 19:27:46.558 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : ==> Parameters: 91(Integer)
2020-06-08 19:27:46.605 DEBUG 7484 --- [http-nio-8080-exec-2] c.k.t.d.P.findAllDetailsByPid            : <==      Total: 0
2020-06-08 19:27:46.606  INFO 7484 --- [http-nio-8080-exec-2] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=[CategoryVO{id=60, name='安全座椅', products=[Product [Hash = 844982541, id=958, name=惠尔顿儿童安全座椅isofix硬接口汽车用安全坐椅9个月-12岁酷睿宝, subtitle=双接口固定 夏克立推荐 好评如潮, originalprice=2848.0, promoteprice=1993.6, stock=52, cid=60, createdate=Mon Jul 25 10:29:07 CST 2016, serialVersionUID=1], Product [Hash = 1686490830, id=959, name=好孩子汽车儿童安全座椅goodbaby9个月－12岁宝宝座椅cs668侧碰王, subtitle=开团3秒半价 475元 提前购买 咨询客服, originalprice=1999.0, promoteprice=1199.4, stock=89, cid=60, createdate=Sun Jul 17 10:29:10 CST 2016, serialVersionUID=1], Product [Hash = 282244595, id=960, name=REEBABY儿童安全座椅9个月-12岁宝宝婴儿汽车用坐椅车载 3C认证, subtitle=睿睿熊定制款 合金钢骨架 全国包邮, originalprice=1280.0, promoteprice=1216.0, stock=71, cid=60, createdate=Tue Jul 26 10:29:13 CST 2016, serialVersionUID=1], Product [Hash = 753099876, id=961, name=REEBABY汽车儿童安全座椅ISOFIX 0-4-6-12岁婴儿宝宝新生儿可躺, subtitle=165度超大 躺角 0-12岁 正反双向 安装, originalprice=1680.0, promoteprice=1344.0, stock=59, cid=60, createdate=Sun Aug 21 10:29:16 CST 2016, serialVersionUID=1], Product [Hash = 1966040564, id=962, name=新生儿婴儿提篮式安全座椅汽车用车载儿童安全坐椅宝宝摇篮便携式, subtitle=法国畅销品牌 ITW卡扣 环保针织面料, originalprice=980.0, promoteprice=882.0, stock=16, cid=60, createdate=Tue Aug 09 10:29:19 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 844982541, id=958, name=惠尔顿儿童安全座椅isofix硬接口汽车用安全坐椅9个月-12岁酷睿宝, subtitle=双接口固定 夏克立推荐 好评如潮, originalprice=2848.0, promoteprice=1993.6, stock=52, cid=60, createdate=Mon Jul 25 10:29:07 CST 2016, serialVersionUID=1], Product [Hash = 1686490830, id=959, name=好孩子汽车儿童安全座椅goodbaby9个月－12岁宝宝座椅cs668侧碰王, subtitle=开团3秒半价 475元 提前购买 咨询客服, originalprice=1999.0, promoteprice=1199.4, stock=89, cid=60, createdate=Sun Jul 17 10:29:10 CST 2016, serialVersionUID=1], Product [Hash = 282244595, id=960, name=REEBABY儿童安全座椅9个月-12岁宝宝婴儿汽车用坐椅车载 3C认证, subtitle=睿睿熊定制款 合金钢骨架 全国包邮, originalprice=1280.0, promoteprice=1216.0, stock=71, cid=60, createdate=Tue Jul 26 10:29:13 CST 2016, serialVersionUID=1], Product [Hash = 753099876, id=961, name=REEBABY汽车儿童安全座椅ISOFIX 0-4-6-12岁婴儿宝宝新生儿可躺, subtitle=165度超大 躺角 0-12岁 正反双向 安装, originalprice=1680.0, promoteprice=1344.0, stock=59, cid=60, createdate=Sun Aug 21 10:29:16 CST 2016, serialVersionUID=1], Product [Hash = 1966040564, id=962, name=新生儿婴儿提篮式安全座椅汽车用车载儿童安全坐椅宝宝摇篮便携式, subtitle=法国畅销品牌 ITW卡扣 环保针织面料, originalprice=980.0, promoteprice=882.0, stock=16, cid=60, createdate=Tue Aug 09 10:29:19 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=64, name='太阳镜', products=[Product [Hash = 980316429, id=899, name=新款男士偏光太阳镜日夜两用墨镜潮运动开车专用驾驶偏光镜夜视镜, subtitle=时尚新款 铝镁纤维镜架 科技动感, originalprice=580.0, promoteprice=551.0, stock=91, cid=64, createdate=Sat Aug 06 10:21:07 CST 2016, serialVersionUID=1], Product [Hash = 219800160, id=900, name=变色眼镜男女款半框太阳镜大框潮流防辐射防紫外防蓝光近视镜护目, subtitle=, originalprice=200.0, promoteprice=170.0, stock=77, cid=64, createdate=Wed Jul 27 10:21:10 CST 2016, serialVersionUID=1], Product [Hash = 51848946, id=901, name=帕莎Prsr太阳镜女偏光镜潮范冰冰同款女士眼镜可配近视墨镜T60017, subtitle=镜片 防紫外线 超轻材质 记忆材质, originalprice=780.0, promoteprice=624.0, stock=86, cid=64, createdate=Tue Aug 16 10:21:13 CST 2016, serialVersionUID=1], Product [Hash = 222211999, id=902, name=陌森太阳眼镜男女2016偏光定制驾驶近视墨镜有带度数的莫森MS8006, subtitle=加拍镜片可配 近视： 原装无度数！ 顺丰包邮, originalprice=798.0, promoteprice=518.7, stock=45, cid=64, createdate=Wed Aug 03 10:21:17 CST 2016, serialVersionUID=1], Product [Hash = 1141981484, id=903, name=好先生同款墨镜孙红雷偏光男士太阳镜韩明星女款圆脸方框金属近视, subtitle=偏光 圆脸 方框, originalprice=150.0, promoteprice=97.5, stock=84, cid=64, createdate=Fri Aug 12 10:21:20 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 980316429, id=899, name=新款男士偏光太阳镜日夜两用墨镜潮运动开车专用驾驶偏光镜夜视镜, subtitle=时尚新款 铝镁纤维镜架 科技动感, originalprice=580.0, promoteprice=551.0, stock=91, cid=64, createdate=Sat Aug 06 10:21:07 CST 2016, serialVersionUID=1], Product [Hash = 219800160, id=900, name=变色眼镜男女款半框太阳镜大框潮流防辐射防紫外防蓝光近视镜护目, subtitle=, originalprice=200.0, promoteprice=170.0, stock=77, cid=64, createdate=Wed Jul 27 10:21:10 CST 2016, serialVersionUID=1], Product [Hash = 51848946, id=901, name=帕莎Prsr太阳镜女偏光镜潮范冰冰同款女士眼镜可配近视墨镜T60017, subtitle=镜片 防紫外线 超轻材质 记忆材质, originalprice=780.0, promoteprice=624.0, stock=86, cid=64, createdate=Tue Aug 16 10:21:13 CST 2016, serialVersionUID=1], Product [Hash = 222211999, id=902, name=陌森太阳眼镜男女2016偏光定制驾驶近视墨镜有带度数的莫森MS8006, subtitle=加拍镜片可配 近视： 原装无度数！ 顺丰包邮, originalprice=798.0, promoteprice=518.7, stock=45, cid=64, createdate=Wed Aug 03 10:21:17 CST 2016, serialVersionUID=1], Product [Hash = 1141981484, id=903, name=好先生同款墨镜孙红雷偏光男士太阳镜韩明星女款圆脸方框金属近视, subtitle=偏光 圆脸 方框, originalprice=150.0, promoteprice=97.5, stock=84, cid=64, createdate=Fri Aug 12 10:21:20 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=68, name='品牌女装', products=[Product [Hash = 114925868, id=844, name=拉夏贝尔puella普埃拉2016休闲修身五分袖一字领收腰套装20007986, subtitle=, originalprice=369.0, promoteprice=350.55, stock=71, cid=68, createdate=Sun Aug 14 10:13:28 CST 2016, serialVersionUID=1], Product [Hash = 1011034035, id=845, name=拉夏贝尔 7m莫丽菲尔2016秋新款条纹五分袖连衣裙套装女70006522, subtitle=8月3日 新品, originalprice=399.0, promoteprice=299.25, stock=79, cid=68, createdate=Sun Jul 10 10:13:30 CST 2016, serialVersionUID=1], Product [Hash = 1148794355, id=846, name=女巫2016欧洲站夏季新品欧美时尚绣花衬衣上衣九分裤两件套装高端, subtitle=女巫高端定制 欧美时尚 两件套, originalprice=928.0, promoteprice=835.2, stock=29, cid=68, createdate=Wed Aug 10 10:13:32 CST 2016, serialVersionUID=1], Product [Hash = 179242097, id=847, name=妖精的口袋P360度漂浮秋装欧美半身裙短款外套时尚套装女两件套, subtitle=口袋特殊材质 拼接 品质扣子 水洗色 套装, originalprice=399.0, promoteprice=319.2, stock=73, cid=68, createdate=Thu Aug 18 10:13:35 CST 2016, serialVersionUID=1], Product [Hash = 1093928137, id=848, name=妖精的口袋P几枚礼物秋装甜美连帽短外套印花休闲裤时尚套装女, subtitle=帽里撞色 植绒抽绳装饰 质感吊钟 图案印花 套装, originalprice=339.0, promoteprice=322.05, stock=87, cid=68, createdate=Mon Aug 15 10:13:37 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 114925868, id=844, name=拉夏贝尔puella普埃拉2016休闲修身五分袖一字领收腰套装20007986, subtitle=, originalprice=369.0, promoteprice=350.55, stock=71, cid=68, createdate=Sun Aug 14 10:13:28 CST 2016, serialVersionUID=1], Product [Hash = 1011034035, id=845, name=拉夏贝尔 7m莫丽菲尔2016秋新款条纹五分袖连衣裙套装女70006522, subtitle=8月3日 新品, originalprice=399.0, promoteprice=299.25, stock=79, cid=68, createdate=Sun Jul 10 10:13:30 CST 2016, serialVersionUID=1], Product [Hash = 1148794355, id=846, name=女巫2016欧洲站夏季新品欧美时尚绣花衬衣上衣九分裤两件套装高端, subtitle=女巫高端定制 欧美时尚 两件套, originalprice=928.0, promoteprice=835.2, stock=29, cid=68, createdate=Wed Aug 10 10:13:32 CST 2016, serialVersionUID=1], Product [Hash = 179242097, id=847, name=妖精的口袋P360度漂浮秋装欧美半身裙短款外套时尚套装女两件套, subtitle=口袋特殊材质 拼接 品质扣子 水洗色 套装, originalprice=399.0, promoteprice=319.2, stock=73, cid=68, createdate=Thu Aug 18 10:13:35 CST 2016, serialVersionUID=1], Product [Hash = 1093928137, id=848, name=妖精的口袋P几枚礼物秋装甜美连帽短外套印花休闲裤时尚套装女, subtitle=帽里撞色 植绒抽绳装饰 质感吊钟 图案印花 套装, originalprice=339.0, promoteprice=322.05, stock=87, cid=68, createdate=Mon Aug 15 10:13:37 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=69, name='时尚男鞋', products=[Product [Hash = 1685052899, id=784, name=DOGEXI透气真皮男鞋子雕花男士休闲鞋反绒皮英伦低帮板鞋男潮鞋秋, subtitle=牛皮鞋面 猪皮内里 标准运动鞋码, originalprice=289.0, promoteprice=202.3, stock=21, cid=69, createdate=Sat Aug 13 10:06:10 CST 2016, serialVersionUID=1], Product [Hash = 1765063216, id=785, name=花花公子男鞋夏季小白鞋男士休闲鞋白鞋板鞋白色平底百搭鞋子男潮, subtitle=天猫正品 百搭小白鞋 顺丰包邮, originalprice=330.0, promoteprice=313.5, stock=44, cid=69, createdate=Sat Aug 20 10:06:14 CST 2016, serialVersionUID=1], Product [Hash = 457881579, id=786, name=花花公子皮鞋男士商务休闲男鞋夏季英伦真皮系带休闲鞋男板鞋子, subtitle=高端大气 商务休闲 时尚潮流 全国包邮 赠运费险, originalprice=368.0, promoteprice=294.4, stock=23, cid=69, createdate=Thu Aug 11 10:06:17 CST 2016, serialVersionUID=1], Product [Hash = 2050619911, id=787, name=酷队秋季运动鞋情侣鞋跑步鞋潮男鞋子透气休闲鞋飞织低帮潮鞋系带, subtitle=, originalprice=328.0, promoteprice=229.6, stock=73, cid=69, createdate=Thu Aug 04 10:06:20 CST 2016, serialVersionUID=1], Product [Hash = 1612947558, id=788, name=木林森夏季男鞋休闲鞋男英伦真皮男士休闲皮鞋圆头系带青年潮鞋子, subtitle=头层牛皮 时尚休闲 韩版潮流 型男必备, originalprice=326.0, promoteprice=293.4, stock=96, cid=69, createdate=Wed Aug 17 10:06:24 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1685052899, id=784, name=DOGEXI透气真皮男鞋子雕花男士休闲鞋反绒皮英伦低帮板鞋男潮鞋秋, subtitle=牛皮鞋面 猪皮内里 标准运动鞋码, originalprice=289.0, promoteprice=202.3, stock=21, cid=69, createdate=Sat Aug 13 10:06:10 CST 2016, serialVersionUID=1], Product [Hash = 1765063216, id=785, name=花花公子男鞋夏季小白鞋男士休闲鞋白鞋板鞋白色平底百搭鞋子男潮, subtitle=天猫正品 百搭小白鞋 顺丰包邮, originalprice=330.0, promoteprice=313.5, stock=44, cid=69, createdate=Sat Aug 20 10:06:14 CST 2016, serialVersionUID=1], Product [Hash = 457881579, id=786, name=花花公子皮鞋男士商务休闲男鞋夏季英伦真皮系带休闲鞋男板鞋子, subtitle=高端大气 商务休闲 时尚潮流 全国包邮 赠运费险, originalprice=368.0, promoteprice=294.4, stock=23, cid=69, createdate=Thu Aug 11 10:06:17 CST 2016, serialVersionUID=1], Product [Hash = 2050619911, id=787, name=酷队秋季运动鞋情侣鞋跑步鞋潮男鞋子透气休闲鞋飞织低帮潮鞋系带, subtitle=, originalprice=328.0, promoteprice=229.6, stock=73, cid=69, createdate=Thu Aug 04 10:06:20 CST 2016, serialVersionUID=1], Product [Hash = 1612947558, id=788, name=木林森夏季男鞋休闲鞋男英伦真皮男士休闲皮鞋圆头系带青年潮鞋子, subtitle=头层牛皮 时尚休闲 韩版潮流 型男必备, originalprice=326.0, promoteprice=293.4, stock=96, cid=69, createdate=Wed Aug 17 10:06:24 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=71, name='男士西服', products=[Product [Hash = 738882408, id=729, name=【新】罗蒙羊毛西服套装男修身商务职业装2016年秋季新款#1S51126, subtitle=, originalprice=2199.0, promoteprice=1759.2, stock=96, cid=71, createdate=Thu Aug 04 09:57:55 CST 2016, serialVersionUID=1], Product [Hash = 1647410413, id=730, name=男士西服套装修身英伦竖条纹休闲西装男套装三件套新郎结婚礼服春, subtitle=今赠马甲衬衫 精致竖条纹 奢华品质 精细做工, originalprice=729.0, promoteprice=437.4, stock=30, cid=71, createdate=Wed Jul 20 09:57:57 CST 2016, serialVersionUID=1], Product [Hash = 1475173230, id=731, name=西服套装男夏季新郎结婚礼服三件套伴郎服薄款西服大码西装男套装, subtitle=亮眼帅气 优雅休闲 格调气质 时尚格子 结婚首选, originalprice=1988.0, promoteprice=1491.0, stock=10, cid=71, createdate=Wed Aug 10 09:57:59 CST 2016, serialVersionUID=1], Product [Hash = 716235109, id=732, name=三件套Actionmates新款韩版修身休闲格子西服套装男士小西装礼服, subtitle=韩国进口面料 韩版立体裁剪 版型好 送领结领带, originalprice=799.0, promoteprice=479.4, stock=56, cid=71, createdate=Sat Jul 16 09:58:02 CST 2016, serialVersionUID=1], Product [Hash = 1440630376, id=733, name=Action mates韩版修身男士西服套装发型师休闲小西装结婚礼服潮, subtitle=包邮申通 韩版修身 版型好 不容错过, originalprice=699.0, promoteprice=419.4, stock=79, cid=71, createdate=Thu Jul 07 09:58:04 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 738882408, id=729, name=【新】罗蒙羊毛西服套装男修身商务职业装2016年秋季新款#1S51126, subtitle=, originalprice=2199.0, promoteprice=1759.2, stock=96, cid=71, createdate=Thu Aug 04 09:57:55 CST 2016, serialVersionUID=1], Product [Hash = 1647410413, id=730, name=男士西服套装修身英伦竖条纹休闲西装男套装三件套新郎结婚礼服春, subtitle=今赠马甲衬衫 精致竖条纹 奢华品质 精细做工, originalprice=729.0, promoteprice=437.4, stock=30, cid=71, createdate=Wed Jul 20 09:57:57 CST 2016, serialVersionUID=1], Product [Hash = 1475173230, id=731, name=西服套装男夏季新郎结婚礼服三件套伴郎服薄款西服大码西装男套装, subtitle=亮眼帅气 优雅休闲 格调气质 时尚格子 结婚首选, originalprice=1988.0, promoteprice=1491.0, stock=10, cid=71, createdate=Wed Aug 10 09:57:59 CST 2016, serialVersionUID=1], Product [Hash = 716235109, id=732, name=三件套Actionmates新款韩版修身休闲格子西服套装男士小西装礼服, subtitle=韩国进口面料 韩版立体裁剪 版型好 送领结领带, originalprice=799.0, promoteprice=479.4, stock=56, cid=71, createdate=Sat Jul 16 09:58:02 CST 2016, serialVersionUID=1], Product [Hash = 1440630376, id=733, name=Action mates韩版修身男士西服套装发型师休闲小西装结婚礼服潮, subtitle=包邮申通 韩版修身 版型好 不容错过, originalprice=699.0, promoteprice=419.4, stock=79, cid=71, createdate=Thu Jul 07 09:58:04 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=72, name='男士手拿包', products=[Product [Hash = 1021419050, id=673, name=劳迪莱斯男士手包休闲手拿包牛皮大容量钱包男包软面小包包手抓包, subtitle=牛皮手包 耐磨耐用 多卡位设计, originalprice=185.0, promoteprice=157.25, stock=24, cid=72, createdate=Thu Jul 21 09:50:46 CST 2016, serialVersionUID=1], Product [Hash = 32146675, id=674, name=英伦邦纹男士手包牛皮大容量真皮手拿包手抓包双拉链商务正品软皮, subtitle=意大利牛皮 纹路自然漂亮 更耐用更尊贵 手感棒, originalprice=588.0, promoteprice=411.6, stock=42, cid=72, createdate=Tue Aug 23 09:50:48 CST 2016, serialVersionUID=1], Product [Hash = 754775650, id=675, name=唯美诺新款男士手包男包真皮大容量小羊皮手拿包信封包软皮夹包潮, subtitle=优质羊皮 大容量 品牌做工 超软手感 终身包保修, originalprice=498.0, promoteprice=448.2, stock=84, cid=72, createdate=Sat Jul 30 09:50:52 CST 2016, serialVersionUID=1], Product [Hash = 188090515, id=676, name=宾度 男士手包真皮大容量手拿包牛皮个性潮男包手抓包软皮信封包, subtitle=专注品质领卷 顺丰包邮 头层牛皮 大容量 软皮, originalprice=568.0, promoteprice=511.2, stock=79, cid=72, createdate=Thu Aug 04 09:50:54 CST 2016, serialVersionUID=1], Product [Hash = 991348497, id=677, name=MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮, subtitle=无理由退换货 赠退货运费险, originalprice=888.0, promoteprice=799.2, stock=98, cid=72, createdate=Thu Jul 21 09:50:58 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1021419050, id=673, name=劳迪莱斯男士手包休闲手拿包牛皮大容量钱包男包软面小包包手抓包, subtitle=牛皮手包 耐磨耐用 多卡位设计, originalprice=185.0, promoteprice=157.25, stock=24, cid=72, createdate=Thu Jul 21 09:50:46 CST 2016, serialVersionUID=1], Product [Hash = 32146675, id=674, name=英伦邦纹男士手包牛皮大容量真皮手拿包手抓包双拉链商务正品软皮, subtitle=意大利牛皮 纹路自然漂亮 更耐用更尊贵 手感棒, originalprice=588.0, promoteprice=411.6, stock=42, cid=72, createdate=Tue Aug 23 09:50:48 CST 2016, serialVersionUID=1], Product [Hash = 754775650, id=675, name=唯美诺新款男士手包男包真皮大容量小羊皮手拿包信封包软皮夹包潮, subtitle=优质羊皮 大容量 品牌做工 超软手感 终身包保修, originalprice=498.0, promoteprice=448.2, stock=84, cid=72, createdate=Sat Jul 30 09:50:52 CST 2016, serialVersionUID=1], Product [Hash = 188090515, id=676, name=宾度 男士手包真皮大容量手拿包牛皮个性潮男包手抓包软皮信封包, subtitle=专注品质领卷 顺丰包邮 头层牛皮 大容量 软皮, originalprice=568.0, promoteprice=511.2, stock=79, cid=72, createdate=Thu Aug 04 09:50:54 CST 2016, serialVersionUID=1], Product [Hash = 991348497, id=677, name=MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮, subtitle=无理由退换货 赠退货运费险, originalprice=888.0, promoteprice=799.2, stock=98, cid=72, createdate=Thu Jul 21 09:50:58 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=73, name='男表', products=[Product [Hash = 1854800284, id=620, name=依伦新款超薄手表 男表真皮带休闲时尚男士腕表潮流防水石英表, subtitle=简约两针 深度防水 进口机芯 送真皮表带 运费险, originalprice=1280.0, promoteprice=1024.0, stock=64, cid=73, createdate=Thu Aug 11 09:42:48 CST 2016, serialVersionUID=1], Product [Hash = 629847497, id=621, name=【入门】西铁城CITIZEN新品超值体验机械手表男表NH8350-59AB/EB, subtitle=全国联保 3期0利息 大气简约 新品, originalprice=1700.0, promoteprice=1445.0, stock=60, cid=73, createdate=Sat Aug 13 09:42:51 CST 2016, serialVersionUID=1], Product [Hash = 516113275, id=622, name=正品手表男精钢商务休闲男士手表石英表时尚潮流夜光超薄男表防水, subtitle=机构质检 防水夜光 赠送皮表带 特价抢购, originalprice=699.0, promoteprice=489.3, stock=34, cid=73, createdate=Thu Aug 25 09:42:54 CST 2016, serialVersionUID=1], Product [Hash = 333459965, id=623, name=正品名仕爵手表男机械表夜光精钢防水大表盘 全自动时尚潮流男表, subtitle=终身保修 正品 全自动 机械表 镂空机械表, originalprice=1900.0, promoteprice=1140.0, stock=85, cid=73, createdate=Thu Aug 25 09:42:57 CST 2016, serialVersionUID=1], Product [Hash = 234635516, id=624, name=飞克手表 男表皮带手表 防水商务休闲男士手表 腕表 石英表手表, subtitle=正品进口机芯 蓝宝石镜面 指针星期显示, originalprice=1999.0, promoteprice=1199.4, stock=82, cid=73, createdate=Fri Aug 05 09:43:00 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1854800284, id=620, name=依伦新款超薄手表 男表真皮带休闲时尚男士腕表潮流防水石英表, subtitle=简约两针 深度防水 进口机芯 送真皮表带 运费险, originalprice=1280.0, promoteprice=1024.0, stock=64, cid=73, createdate=Thu Aug 11 09:42:48 CST 2016, serialVersionUID=1], Product [Hash = 629847497, id=621, name=【入门】西铁城CITIZEN新品超值体验机械手表男表NH8350-59AB/EB, subtitle=全国联保 3期0利息 大气简约 新品, originalprice=1700.0, promoteprice=1445.0, stock=60, cid=73, createdate=Sat Aug 13 09:42:51 CST 2016, serialVersionUID=1], Product [Hash = 516113275, id=622, name=正品手表男精钢商务休闲男士手表石英表时尚潮流夜光超薄男表防水, subtitle=机构质检 防水夜光 赠送皮表带 特价抢购, originalprice=699.0, promoteprice=489.3, stock=34, cid=73, createdate=Thu Aug 25 09:42:54 CST 2016, serialVersionUID=1], Product [Hash = 333459965, id=623, name=正品名仕爵手表男机械表夜光精钢防水大表盘 全自动时尚潮流男表, subtitle=终身保修 正品 全自动 机械表 镂空机械表, originalprice=1900.0, promoteprice=1140.0, stock=85, cid=73, createdate=Thu Aug 25 09:42:57 CST 2016, serialVersionUID=1], Product [Hash = 234635516, id=624, name=飞克手表 男表皮带手表 防水商务休闲男士手表 腕表 石英表手表, subtitle=正品进口机芯 蓝宝石镜面 指针星期显示, originalprice=1999.0, promoteprice=1199.4, stock=82, cid=73, createdate=Fri Aug 05 09:43:00 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=74, name='女表', products=[Product [Hash = 2099812471, id=565, name=正品雷克斯韩版简约时尚潮流真皮石英情侣表女士手表女表皮带防水, subtitle=时尚之选 做精致女人 精美包装 支持货到付款, originalprice=1280.0, promoteprice=896.0, stock=82, cid=74, createdate=Mon Aug 22 09:34:54 CST 2016, serialVersionUID=1], Product [Hash = 2037695538, id=566, name=正港手表女四叶草防水手链表简约潮流学生女表韩版时尚石英表正品, subtitle=热销万只 4.9分好评 代写贺卡 质保一年, originalprice=143.71, promoteprice=114.968, stock=23, cid=74, createdate=Thu Aug 25 09:34:57 CST 2016, serialVersionUID=1], Product [Hash = 1804172600, id=567, name=罗宾 钢带女表 女士腕表 水钻夜光防水石英表 潮流时尚复古手表女, subtitle=正品 水钻刻度 钢带女表 买一送三 赠送运费险, originalprice=990.0, promoteprice=792.0, stock=54, cid=74, createdate=Mon Jul 11 09:34:59 CST 2016, serialVersionUID=1], Product [Hash = 77413141, id=568, name=浪铂正品长方形手表女表皮带时尚潮流石英表防水真皮学生休闲腕表, subtitle=今日拍下 自动减30 送真皮表带 石榴石手链, originalprice=998.0, promoteprice=598.8, stock=81, cid=74, createdate=Tue Jul 26 09:35:02 CST 2016, serialVersionUID=1], Product [Hash = 1037037777, id=569, name=宾格手表正品女式精钢腕表大表盘全自动机械表防水情侣表女表真皮, subtitle=陈小春代言 宾格正品 情侣手表 同款还有男表, originalprice=488.0, promoteprice=341.6, stock=16, cid=74, createdate=Tue Jul 19 09:35:05 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 2099812471, id=565, name=正品雷克斯韩版简约时尚潮流真皮石英情侣表女士手表女表皮带防水, subtitle=时尚之选 做精致女人 精美包装 支持货到付款, originalprice=1280.0, promoteprice=896.0, stock=82, cid=74, createdate=Mon Aug 22 09:34:54 CST 2016, serialVersionUID=1], Product [Hash = 2037695538, id=566, name=正港手表女四叶草防水手链表简约潮流学生女表韩版时尚石英表正品, subtitle=热销万只 4.9分好评 代写贺卡 质保一年, originalprice=143.71, promoteprice=114.968, stock=23, cid=74, createdate=Thu Aug 25 09:34:57 CST 2016, serialVersionUID=1], Product [Hash = 1804172600, id=567, name=罗宾 钢带女表 女士腕表 水钻夜光防水石英表 潮流时尚复古手表女, subtitle=正品 水钻刻度 钢带女表 买一送三 赠送运费险, originalprice=990.0, promoteprice=792.0, stock=54, cid=74, createdate=Mon Jul 11 09:34:59 CST 2016, serialVersionUID=1], Product [Hash = 77413141, id=568, name=浪铂正品长方形手表女表皮带时尚潮流石英表防水真皮学生休闲腕表, subtitle=今日拍下 自动减30 送真皮表带 石榴石手链, originalprice=998.0, promoteprice=598.8, stock=81, cid=74, createdate=Tue Jul 26 09:35:02 CST 2016, serialVersionUID=1], Product [Hash = 1037037777, id=569, name=宾格手表正品女式精钢腕表大表盘全自动机械表防水情侣表女表真皮, subtitle=陈小春代言 宾格正品 情侣手表 同款还有男表, originalprice=488.0, promoteprice=341.6, stock=16, cid=74, createdate=Tue Jul 19 09:35:05 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=75, name='空调', products=[Product [Hash = 1648748046, id=509, name=AUX/奥克斯 KFR-26GW/BpTYC19+1大1匹高端智能云变频冷暖挂机空调, subtitle=30秒速冷 一级能效 ECO节能 阿里智能 除湿, originalprice=3799.0, promoteprice=2659.3, stock=15, cid=75, createdate=Mon Aug 01 09:27:18 CST 2016, serialVersionUID=1], Product [Hash = 1116026819, id=510, name=Kelon/科龙 KFR-26GW/EFQRA2(1N20) 大1匹二级变频智能冷暖挂机, subtitle=二级变频 阿里智能 高效除甲醛 快速制冷暖, originalprice=2599.0, promoteprice=1559.4, stock=78, cid=75, createdate=Mon Aug 08 09:27:20 CST 2016, serialVersionUID=1], Product [Hash = 791542037, id=511, name=TCL KFRd-35GW/EP13 大1.5匹冷暖电辅空调1.5P挂机定频壁挂式包邮, subtitle=快速冷暖 四重静音 每日前5名 好礼2选1, originalprice=2399.0, promoteprice=1679.3, stock=64, cid=75, createdate=Thu Jul 21 09:27:22 CST 2016, serialVersionUID=1], Product [Hash = 1839648089, id=512, name=Panasonic/松下 KFR-36GW/BpSJ1S大1.5匹直流变频冷暖挂式空调, subtitle=原装变频压缩 机静音除雾霾 送货入户 0元分期, originalprice=3999.0, promoteprice=3599.1, stock=59, cid=75, createdate=Sat Jul 16 09:27:25 CST 2016, serialVersionUID=1], Product [Hash = 547238773, id=513, name=Panasonic/松下 KFR-36GW/SH2-1大1.5匹二级能效静音空调挂机, subtitle=原装压缩机 品质保证 二级能效, originalprice=3399.0, promoteprice=3059.1, stock=71, cid=75, createdate=Tue Jul 12 09:27:27 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1648748046, id=509, name=AUX/奥克斯 KFR-26GW/BpTYC19+1大1匹高端智能云变频冷暖挂机空调, subtitle=30秒速冷 一级能效 ECO节能 阿里智能 除湿, originalprice=3799.0, promoteprice=2659.3, stock=15, cid=75, createdate=Mon Aug 01 09:27:18 CST 2016, serialVersionUID=1], Product [Hash = 1116026819, id=510, name=Kelon/科龙 KFR-26GW/EFQRA2(1N20) 大1匹二级变频智能冷暖挂机, subtitle=二级变频 阿里智能 高效除甲醛 快速制冷暖, originalprice=2599.0, promoteprice=1559.4, stock=78, cid=75, createdate=Mon Aug 08 09:27:20 CST 2016, serialVersionUID=1], Product [Hash = 791542037, id=511, name=TCL KFRd-35GW/EP13 大1.5匹冷暖电辅空调1.5P挂机定频壁挂式包邮, subtitle=快速冷暖 四重静音 每日前5名 好礼2选1, originalprice=2399.0, promoteprice=1679.3, stock=64, cid=75, createdate=Thu Jul 21 09:27:22 CST 2016, serialVersionUID=1], Product [Hash = 1839648089, id=512, name=Panasonic/松下 KFR-36GW/BpSJ1S大1.5匹直流变频冷暖挂式空调, subtitle=原装变频压缩 机静音除雾霾 送货入户 0元分期, originalprice=3999.0, promoteprice=3599.1, stock=59, cid=75, createdate=Sat Jul 16 09:27:25 CST 2016, serialVersionUID=1], Product [Hash = 547238773, id=513, name=Panasonic/松下 KFR-36GW/SH2-1大1.5匹二级能效静音空调挂机, subtitle=原装压缩机 品质保证 二级能效, originalprice=3399.0, promoteprice=3059.1, stock=71, cid=75, createdate=Tue Jul 12 09:27:27 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=76, name='冰箱', products=[Product [Hash = 1263416202, id=449, name=MeiLing/美菱 BCD-560WUCX对开门电冰箱家用冰箱WIFI智能风冷无霜, subtitle=家用冰箱 WIFI智能 风冷无霜, originalprice=3399.0, promoteprice=3059.1, stock=54, cid=76, createdate=Sun Aug 14 09:19:59 CST 2016, serialVersionUID=1], Product [Hash = 199986855, id=450, name=FRESTECH/新飞 BCD-286WDKSM阿里云智能wifi风冷无霜智控两门冰箱, subtitle=阿里云智能 远程WIFI 智控 风冷无霜, originalprice=3599.0, promoteprice=2879.2, stock=68, cid=76, createdate=Fri Aug 05 09:20:00 CST 2016, serialVersionUID=1], Product [Hash = 1358710406, id=451, name=Konka/康佳 BCD-558WEGY5SWT对开冰箱家用一级节能风冷无霜电冰箱, subtitle=阿里云智能 风冷无霜 大容量 一级能效节能, originalprice=3000.0, promoteprice=1800.0, stock=74, cid=76, createdate=Sun Jul 24 09:20:03 CST 2016, serialVersionUID=1], Product [Hash = 27837047, id=452, name=【阿里智能】Galanz/格兰仕 BCD-251WTHG(T) 三门电冰箱251升风冷, subtitle=风冷无霜 一级能效 智能控温 菱格面板 立体风, originalprice=3299.0, promoteprice=2474.25, stock=63, cid=76, createdate=Wed Jul 27 09:20:05 CST 2016, serialVersionUID=1], Product [Hash = 994075563, id=453, name=Haier/海尔 BCD-618WDVGU1海尔变频对开门风冷智能控温双门电冰箱, subtitle=手机智能控制 玫瑰金外观 杀菌净味系统 变频, originalprice=6999.0, promoteprice=5949.15, stock=22, cid=76, createdate=Thu Aug 11 09:20:07 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1263416202, id=449, name=MeiLing/美菱 BCD-560WUCX对开门电冰箱家用冰箱WIFI智能风冷无霜, subtitle=家用冰箱 WIFI智能 风冷无霜, originalprice=3399.0, promoteprice=3059.1, stock=54, cid=76, createdate=Sun Aug 14 09:19:59 CST 2016, serialVersionUID=1], Product [Hash = 199986855, id=450, name=FRESTECH/新飞 BCD-286WDKSM阿里云智能wifi风冷无霜智控两门冰箱, subtitle=阿里云智能 远程WIFI 智控 风冷无霜, originalprice=3599.0, promoteprice=2879.2, stock=68, cid=76, createdate=Fri Aug 05 09:20:00 CST 2016, serialVersionUID=1], Product [Hash = 1358710406, id=451, name=Konka/康佳 BCD-558WEGY5SWT对开冰箱家用一级节能风冷无霜电冰箱, subtitle=阿里云智能 风冷无霜 大容量 一级能效节能, originalprice=3000.0, promoteprice=1800.0, stock=74, cid=76, createdate=Sun Jul 24 09:20:03 CST 2016, serialVersionUID=1], Product [Hash = 27837047, id=452, name=【阿里智能】Galanz/格兰仕 BCD-251WTHG(T) 三门电冰箱251升风冷, subtitle=风冷无霜 一级能效 智能控温 菱格面板 立体风, originalprice=3299.0, promoteprice=2474.25, stock=63, cid=76, createdate=Wed Jul 27 09:20:05 CST 2016, serialVersionUID=1], Product [Hash = 994075563, id=453, name=Haier/海尔 BCD-618WDVGU1海尔变频对开门风冷智能控温双门电冰箱, subtitle=手机智能控制 玫瑰金外观 杀菌净味系统 变频, originalprice=6999.0, promoteprice=5949.15, stock=22, cid=76, createdate=Thu Aug 11 09:20:07 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=77, name='原汁机', products=[Product [Hash = 1820941522, id=429, name=Philips/飞利浦榨汁机原汁家用HR1884多功能水果冰淇淋机慢汁机, subtitle=, originalprice=2899.0, promoteprice=1884.35, stock=40, cid=77, createdate=Thu Jul 14 09:14:03 CST 2016, serialVersionUID=1], Product [Hash = 1584660403, id=430, name=Whirlpool/惠而浦WJU-VP152B原汁机多功能家用大口径料理榨果汁机, subtitle=整投整榨 原汁无氧化 纯铜电机 三挡压榨, originalprice=1099.0, promoteprice=824.25, stock=22, cid=77, createdate=Wed Aug 24 09:14:05 CST 2016, serialVersionUID=1], Product [Hash = 420423024, id=431, name=Ranbem/瑞本611原汁机大口径低慢速榨汁家用水果汁迷你豆浆机电动, subtitle=新款上市 96mm口径 45慢磨转速 出汁率高, originalprice=2680.0, promoteprice=2278.0, stock=35, cid=77, createdate=Thu Jul 21 09:14:08 CST 2016, serialVersionUID=1], Product [Hash = 569000129, id=432, name=AUX/奥克斯 AUX-Y3802原汁机低速 慢磨水果榨汁机果汁机, subtitle=, originalprice=999.0, promoteprice=799.2, stock=50, cid=77, createdate=Fri Jul 15 09:14:12 CST 2016, serialVersionUID=1], Product [Hash = 119797730, id=433, name=惠而浦WJU-VS208J原汁机家用慢榨多功能榨汁机果汁机豆浆机炸汁机, subtitle=大功率慢榨 浓度调节 噪音小 易清洗 快捷清洗, originalprice=1499.0, promoteprice=1124.25, stock=35, cid=77, createdate=Fri Aug 12 09:14:14 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1820941522, id=429, name=Philips/飞利浦榨汁机原汁家用HR1884多功能水果冰淇淋机慢汁机, subtitle=, originalprice=2899.0, promoteprice=1884.35, stock=40, cid=77, createdate=Thu Jul 14 09:14:03 CST 2016, serialVersionUID=1], Product [Hash = 1584660403, id=430, name=Whirlpool/惠而浦WJU-VP152B原汁机多功能家用大口径料理榨果汁机, subtitle=整投整榨 原汁无氧化 纯铜电机 三挡压榨, originalprice=1099.0, promoteprice=824.25, stock=22, cid=77, createdate=Wed Aug 24 09:14:05 CST 2016, serialVersionUID=1], Product [Hash = 420423024, id=431, name=Ranbem/瑞本611原汁机大口径低慢速榨汁家用水果汁迷你豆浆机电动, subtitle=新款上市 96mm口径 45慢磨转速 出汁率高, originalprice=2680.0, promoteprice=2278.0, stock=35, cid=77, createdate=Thu Jul 21 09:14:08 CST 2016, serialVersionUID=1], Product [Hash = 569000129, id=432, name=AUX/奥克斯 AUX-Y3802原汁机低速 慢磨水果榨汁机果汁机, subtitle=, originalprice=999.0, promoteprice=799.2, stock=50, cid=77, createdate=Fri Jul 15 09:14:12 CST 2016, serialVersionUID=1], Product [Hash = 119797730, id=433, name=惠而浦WJU-VS208J原汁机家用慢榨多功能榨汁机果汁机豆浆机炸汁机, subtitle=大功率慢榨 浓度调节 噪音小 易清洗 快捷清洗, originalprice=1499.0, promoteprice=1124.25, stock=35, cid=77, createdate=Fri Aug 12 09:14:14 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=78, name='扫地机器人', products=[Product [Hash = 1189879506, id=373, name=洁霸BF522多功能洗地机刷地机酒店家用地毯清洗机 擦地机抛光机, subtitle=纯铜电机 厂家直销 售后无忧, originalprice=1900.0, promoteprice=1235.0, stock=39, cid=78, createdate=Thu Jul 21 09:06:32 CST 2016, serialVersionUID=1], Product [Hash = 648583130, id=374, name=Proscenic Swan天鹅扫地机器人 智能家用擦地机拖地全自动吸尘器, subtitle=非常夏日 直降300元 WIFI智控 卷吸互换, originalprice=6580.0, promoteprice=4935.0, stock=65, cid=78, createdate=Fri Jul 08 09:06:34 CST 2016, serialVersionUID=1], Product [Hash = 1438070662, id=375, name=海尔拖地机器人家用全自动擦地机湿拖扫洗地电动智能懒人无线超薄, subtitle=仿人跪式 干湿两拖 自动充电 精准导航 规划清洁, originalprice=3999.0, promoteprice=2999.25, stock=30, cid=78, createdate=Thu Jul 21 09:06:37 CST 2016, serialVersionUID=1], Product [Hash = 1295210037, id=376, name=莱克扫地吸尘器 家用超薄拖地机器人WR10智能静音全自动, subtitle=新品上市 3000pa 大吸力 无惧毛发缠绕, originalprice=1299.0, promoteprice=974.25, stock=11, cid=78, createdate=Mon Jul 18 09:06:39 CST 2016, serialVersionUID=1], Product [Hash = 1796201423, id=377, name=公众智能扫地机器人家用全自动电动清洁地毯擦拖地一体机吸尘器, subtitle=扫拖一体 纤薄高效锂电 限时疯抢 不缠毛发, originalprice=2499.0, promoteprice=2124.15, stock=88, cid=78, createdate=Tue Jul 19 09:06:41 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1189879506, id=373, name=洁霸BF522多功能洗地机刷地机酒店家用地毯清洗机 擦地机抛光机, subtitle=纯铜电机 厂家直销 售后无忧, originalprice=1900.0, promoteprice=1235.0, stock=39, cid=78, createdate=Thu Jul 21 09:06:32 CST 2016, serialVersionUID=1], Product [Hash = 648583130, id=374, name=Proscenic Swan天鹅扫地机器人 智能家用擦地机拖地全自动吸尘器, subtitle=非常夏日 直降300元 WIFI智控 卷吸互换, originalprice=6580.0, promoteprice=4935.0, stock=65, cid=78, createdate=Fri Jul 08 09:06:34 CST 2016, serialVersionUID=1], Product [Hash = 1438070662, id=375, name=海尔拖地机器人家用全自动擦地机湿拖扫洗地电动智能懒人无线超薄, subtitle=仿人跪式 干湿两拖 自动充电 精准导航 规划清洁, originalprice=3999.0, promoteprice=2999.25, stock=30, cid=78, createdate=Thu Jul 21 09:06:37 CST 2016, serialVersionUID=1], Product [Hash = 1295210037, id=376, name=莱克扫地吸尘器 家用超薄拖地机器人WR10智能静音全自动, subtitle=新品上市 3000pa 大吸力 无惧毛发缠绕, originalprice=1299.0, promoteprice=974.25, stock=11, cid=78, createdate=Mon Jul 18 09:06:39 CST 2016, serialVersionUID=1], Product [Hash = 1796201423, id=377, name=公众智能扫地机器人家用全自动电动清洁地毯擦拖地一体机吸尘器, subtitle=扫拖一体 纤薄高效锂电 限时疯抢 不缠毛发, originalprice=2499.0, promoteprice=2124.15, stock=88, cid=78, createdate=Tue Jul 19 09:06:41 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=79, name='平衡车', products=[Product [Hash = 159094579, id=317, name=乐行天下R1N智能电动平衡车双轮成人思维体感车两轮儿童代步车, subtitle=12期免息 智能显示屏 APP遥控 双轮平衡, originalprice=15960.0, promoteprice=11970.0, stock=15, cid=79, createdate=Sat Jul 09 08:59:24 CST 2016, serialVersionUID=1], Product [Hash = 1696369309, id=318, name=乐途智能电动悬浮滑板车太空轮平行车蓝牙自平衡独轮代步车, subtitle=电动平衡 独轮滑板 蓝牙播放 新潮代步车, originalprice=3885.0, promoteprice=3690.75, stock=70, cid=79, createdate=Fri Jul 08 08:59:25 CST 2016, serialVersionUID=1], Product [Hash = 852093685, id=319, name=瑞士米高micro g-bike+ chopper儿童平衡车二轮自行车, subtitle=, originalprice=899.0, promoteprice=809.1, stock=13, cid=79, createdate=Tue Jul 12 08:59:27 CST 2016, serialVersionUID=1], Product [Hash = 663588544, id=320, name=力达康成人电动滑板车折叠锂电池迷你型可折叠两轮代步车, subtitle=可折叠 退货赔运费 续航50 公里更轻更远, originalprice=4160.0, promoteprice=2912.0, stock=82, cid=79, createdate=Fri Aug 19 08:59:28 CST 2016, serialVersionUID=1], Product [Hash = 1914324749, id=321, name=两轮平衡车双轮儿童思维漂移电动扭扭车智能滑板车成人体感代步车, subtitle=, originalprice=889.0, promoteprice=755.65, stock=64, cid=79, createdate=Tue Aug 09 08:59:29 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 159094579, id=317, name=乐行天下R1N智能电动平衡车双轮成人思维体感车两轮儿童代步车, subtitle=12期免息 智能显示屏 APP遥控 双轮平衡, originalprice=15960.0, promoteprice=11970.0, stock=15, cid=79, createdate=Sat Jul 09 08:59:24 CST 2016, serialVersionUID=1], Product [Hash = 1696369309, id=318, name=乐途智能电动悬浮滑板车太空轮平行车蓝牙自平衡独轮代步车, subtitle=电动平衡 独轮滑板 蓝牙播放 新潮代步车, originalprice=3885.0, promoteprice=3690.75, stock=70, cid=79, createdate=Fri Jul 08 08:59:25 CST 2016, serialVersionUID=1], Product [Hash = 852093685, id=319, name=瑞士米高micro g-bike+ chopper儿童平衡车二轮自行车, subtitle=, originalprice=899.0, promoteprice=809.1, stock=13, cid=79, createdate=Tue Jul 12 08:59:27 CST 2016, serialVersionUID=1], Product [Hash = 663588544, id=320, name=力达康成人电动滑板车折叠锂电池迷你型可折叠两轮代步车, subtitle=可折叠 退货赔运费 续航50 公里更轻更远, originalprice=4160.0, promoteprice=2912.0, stock=82, cid=79, createdate=Fri Aug 19 08:59:28 CST 2016, serialVersionUID=1], Product [Hash = 1914324749, id=321, name=两轮平衡车双轮儿童思维漂移电动扭扭车智能滑板车成人体感代步车, subtitle=, originalprice=889.0, promoteprice=755.65, stock=64, cid=79, createdate=Tue Aug 09 08:59:29 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=80, name='电热水器', products=[Product [Hash = 1934844849, id=262, name=Vatti/华帝 DDF60-i14007 60升遥控电储水式电热水器家用速热洗澡, subtitle=热水器狂欢 专享特价 送货入户 免费安装, originalprice=2399.0, promoteprice=1439.4, stock=80, cid=80, createdate=Mon Aug 01 08:52:47 CST 2016, serialVersionUID=1], Product [Hash = 238072172, id=263, name=Haier/海尔 EC6005-T+  60升电热水器  洗澡淋浴 防电墙 送装同步, subtitle=3D速热 即用即洗 遥控智能控制 预约洗, originalprice=1999.0, promoteprice=1299.35, stock=37, cid=80, createdate=Wed Aug 10 08:52:49 CST 2016, serialVersionUID=1], Product [Hash = 1166071268, id=264, name=哆啦A梦weber I2-80 威博电热水器80升储水式智能速热洗澡淋浴60, subtitle=阿里智能 每天限送 20份大礼包 全国联保 包邮, originalprice=1799.0, promoteprice=1079.4, stock=79, cid=80, createdate=Wed Aug 10 08:52:52 CST 2016, serialVersionUID=1], Product [Hash = 1694679158, id=265, name=Vanward/万和 DSCF50-C32双盾电热水器速热联保安装 洗澡 50L省电, subtitle=搪瓷超强内胆 高效节能 迅电速热 双盾保护, originalprice=999.0, promoteprice=699.3, stock=17, cid=80, createdate=Sun Jul 31 08:52:54 CST 2016, serialVersionUID=1], Product [Hash = 228878732, id=266, name=Haier/海尔 EC8003-I/80升洗澡淋浴/储热电热水器防电墙/送货入户, subtitle=机控遥控 一级节能 自动关机 触摸智能控制, originalprice=1799.0, promoteprice=1169.35, stock=71, cid=80, createdate=Thu Jul 14 08:52:56 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1934844849, id=262, name=Vatti/华帝 DDF60-i14007 60升遥控电储水式电热水器家用速热洗澡, subtitle=热水器狂欢 专享特价 送货入户 免费安装, originalprice=2399.0, promoteprice=1439.4, stock=80, cid=80, createdate=Mon Aug 01 08:52:47 CST 2016, serialVersionUID=1], Product [Hash = 238072172, id=263, name=Haier/海尔 EC6005-T+  60升电热水器  洗澡淋浴 防电墙 送装同步, subtitle=3D速热 即用即洗 遥控智能控制 预约洗, originalprice=1999.0, promoteprice=1299.35, stock=37, cid=80, createdate=Wed Aug 10 08:52:49 CST 2016, serialVersionUID=1], Product [Hash = 1166071268, id=264, name=哆啦A梦weber I2-80 威博电热水器80升储水式智能速热洗澡淋浴60, subtitle=阿里智能 每天限送 20份大礼包 全国联保 包邮, originalprice=1799.0, promoteprice=1079.4, stock=79, cid=80, createdate=Wed Aug 10 08:52:52 CST 2016, serialVersionUID=1], Product [Hash = 1694679158, id=265, name=Vanward/万和 DSCF50-C32双盾电热水器速热联保安装 洗澡 50L省电, subtitle=搪瓷超强内胆 高效节能 迅电速热 双盾保护, originalprice=999.0, promoteprice=699.3, stock=17, cid=80, createdate=Sun Jul 31 08:52:54 CST 2016, serialVersionUID=1], Product [Hash = 228878732, id=266, name=Haier/海尔 EC8003-I/80升洗澡淋浴/储热电热水器防电墙/送货入户, subtitle=机控遥控 一级节能 自动关机 触摸智能控制, originalprice=1799.0, promoteprice=1169.35, stock=71, cid=80, createdate=Thu Jul 14 08:52:56 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=81, name='沙发', products=[Product [Hash = 101978757, id=202, name=新款布艺沙发 可拆洗大小户型客厅简约家居贵妃组合L型转角布沙发, subtitle=, originalprice=5198.0, promoteprice=3638.6, stock=94, cid=81, createdate=Sat Aug 20 08:45:28 CST 2016, serialVersionUID=1], Product [Hash = 1173936214, id=203, name=凯米蒂亚欧式真皮沙发组合客厅奢华转角皮艺蓝色沙发美式实木家具, subtitle=匠心独运 欧式美式设计 头层真皮 三包到家, originalprice=18398.0, promoteprice=11038.8, stock=27, cid=81, createdate=Fri Aug 19 08:45:32 CST 2016, serialVersionUID=1], Product [Hash = 915055087, id=204, name=南台布艺沙发组合可拆洗简约现代客厅整装家具布艺沙发组合大户型, subtitle=16CM坐垫 16CM坐垫 重要的 事情 说三遍, originalprice=6576.0, promoteprice=4274.4, stock=63, cid=81, createdate=Tue Aug 16 08:45:36 CST 2016, serialVersionUID=1], Product [Hash = 416040635, id=205, name=依然美佳欧式布艺沙发组合可拆洗新款实木雕花大户型奢华别墅家具, subtitle=高档户型客厅 精湛雕花工艺 实木框架 经典款式, originalprice=10012.0, promoteprice=7008.4, stock=51, cid=81, createdate=Mon Aug 08 08:45:39 CST 2016, serialVersionUID=1], Product [Hash = 1047195421, id=206, name=雅居汇欧式沙发组合实木雕花客厅高档奢华大户型住宅家具布艺沙发, subtitle=热卖推荐 端庄大气 四色可选 五年质保 品质服务, originalprice=32450.0, promoteprice=22715.0, stock=51, cid=81, createdate=Tue Aug 02 08:45:44 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 101978757, id=202, name=新款布艺沙发 可拆洗大小户型客厅简约家居贵妃组合L型转角布沙发, subtitle=, originalprice=5198.0, promoteprice=3638.6, stock=94, cid=81, createdate=Sat Aug 20 08:45:28 CST 2016, serialVersionUID=1], Product [Hash = 1173936214, id=203, name=凯米蒂亚欧式真皮沙发组合客厅奢华转角皮艺蓝色沙发美式实木家具, subtitle=匠心独运 欧式美式设计 头层真皮 三包到家, originalprice=18398.0, promoteprice=11038.8, stock=27, cid=81, createdate=Fri Aug 19 08:45:32 CST 2016, serialVersionUID=1], Product [Hash = 915055087, id=204, name=南台布艺沙发组合可拆洗简约现代客厅整装家具布艺沙发组合大户型, subtitle=16CM坐垫 16CM坐垫 重要的 事情 说三遍, originalprice=6576.0, promoteprice=4274.4, stock=63, cid=81, createdate=Tue Aug 16 08:45:36 CST 2016, serialVersionUID=1], Product [Hash = 416040635, id=205, name=依然美佳欧式布艺沙发组合可拆洗新款实木雕花大户型奢华别墅家具, subtitle=高档户型客厅 精湛雕花工艺 实木框架 经典款式, originalprice=10012.0, promoteprice=7008.4, stock=51, cid=81, createdate=Mon Aug 08 08:45:39 CST 2016, serialVersionUID=1], Product [Hash = 1047195421, id=206, name=雅居汇欧式沙发组合实木雕花客厅高档奢华大户型住宅家具布艺沙发, subtitle=热卖推荐 端庄大气 四色可选 五年质保 品质服务, originalprice=32450.0, promoteprice=22715.0, stock=51, cid=81, createdate=Tue Aug 02 08:45:44 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=82, name='马桶', products=[Product [Hash = 1037282030, id=147, name=乐洁士智能马桶高品质全自动遥控感应一体式智能坐便器座便器, subtitle=全国联保 清洗烘干 气泡按摩 座圈加热 断电冲水, originalprice=8960.0, promoteprice=8512.0, stock=62, cid=82, createdate=Mon Aug 15 08:37:21 CST 2016, serialVersionUID=1], Product [Hash = 1580593506, id=148, name=箭牌马桶/ARROW AB1118脲醛盖板连体喷射虹吸式坐便器座便器正品, subtitle=领券更优惠 品质脲醛盖 千城送装 送安装配件, originalprice=1976.0, promoteprice=1482.0, stock=65, cid=82, createdate=Fri Jul 29 08:37:23 CST 2016, serialVersionUID=1], Product [Hash = 607559041, id=149, name=纳蒂兰卡1066卫浴漩冲虹吸式马桶350坑距坐便器可配智能盖座便器, subtitle=盖板易拆 送全套配件 500区县 送货入户安装, originalprice=1670.0, promoteprice=1503.0, stock=93, cid=82, createdate=Wed Jul 20 08:37:25 CST 2016, serialVersionUID=1], Product [Hash = 1305320477, id=150, name=德国DGPOSY超漩式彩色马桶缓降坐便器静音节水抽水马桶连体座便器, subtitle=纳米自洁釉 漩涡排污 静音节水 净重50kg, originalprice=2399.0, promoteprice=1799.25, stock=79, cid=82, createdate=Sun Jul 31 08:37:27 CST 2016, serialVersionUID=1], Product [Hash = 1844038544, id=151, name=纳蒂兰卡 1082卫浴洁具 钻石切边 坐便器 虹吸式抽水马桶 座便器, subtitle=高性价比 造型新颖 钻石品质 时尚尊贵 好评如潮, originalprice=1900.0, promoteprice=1710.0, stock=64, cid=82, createdate=Wed Aug 03 08:37:29 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 1037282030, id=147, name=乐洁士智能马桶高品质全自动遥控感应一体式智能坐便器座便器, subtitle=全国联保 清洗烘干 气泡按摩 座圈加热 断电冲水, originalprice=8960.0, promoteprice=8512.0, stock=62, cid=82, createdate=Mon Aug 15 08:37:21 CST 2016, serialVersionUID=1], Product [Hash = 1580593506, id=148, name=箭牌马桶/ARROW AB1118脲醛盖板连体喷射虹吸式坐便器座便器正品, subtitle=领券更优惠 品质脲醛盖 千城送装 送安装配件, originalprice=1976.0, promoteprice=1482.0, stock=65, cid=82, createdate=Fri Jul 29 08:37:23 CST 2016, serialVersionUID=1], Product [Hash = 607559041, id=149, name=纳蒂兰卡1066卫浴漩冲虹吸式马桶350坑距坐便器可配智能盖座便器, subtitle=盖板易拆 送全套配件 500区县 送货入户安装, originalprice=1670.0, promoteprice=1503.0, stock=93, cid=82, createdate=Wed Jul 20 08:37:25 CST 2016, serialVersionUID=1], Product [Hash = 1305320477, id=150, name=德国DGPOSY超漩式彩色马桶缓降坐便器静音节水抽水马桶连体座便器, subtitle=纳米自洁釉 漩涡排污 静音节水 净重50kg, originalprice=2399.0, promoteprice=1799.25, stock=79, cid=82, createdate=Sun Jul 31 08:37:27 CST 2016, serialVersionUID=1], Product [Hash = 1844038544, id=151, name=纳蒂兰卡 1082卫浴洁具 钻石切边 坐便器 虹吸式抽水马桶 座便器, subtitle=高性价比 造型新颖 钻石品质 时尚尊贵 好评如潮, originalprice=1900.0, promoteprice=1710.0, stock=64, cid=82, createdate=Wed Aug 03 08:37:29 CST 2016, serialVersionUID=1]]]}, CategoryVO{id=83, name='平板电视', products=[Product [Hash = 480676270, id=87, name=Konka/康佳 LED32S1卧室32吋安卓智能无线WIFI网络液晶平板电视机, subtitle=32吋电视机 8核智能 网络 全国联保 送货上门, originalprice=1699.0, promoteprice=1104.35, stock=98, cid=83, createdate=Sun Aug 14 00:43:32 CST 2016, serialVersionUID=1], Product [Hash = 208454958, id=88, name=Hisense/海信 LED49EC320A 49吋led液晶电视机智能网络平板电视50, subtitle=新品特惠 十核智能 内置WiFi 咨询有惊喜, originalprice=2799.0, promoteprice=1679.4, stock=90, cid=83, createdate=Fri Jul 29 00:43:38 CST 2016, serialVersionUID=1], Product [Hash = 761306570, id=89, name=Hisense/海信 LED40EC520UA 40英寸4K智能平板液晶电视机WIFI网络, subtitle=周末 特惠 2189 元还送 精美礼品, originalprice=2399.0, promoteprice=1439.4, stock=82, cid=83, createdate=Fri Jul 29 00:44:18 CST 2016, serialVersionUID=1], Product [Hash = 242640573, id=90, name=Changhong/长虹 65S1安卓智能12核65英寸网络平板LED液晶电视机70, subtitle=屏大影院 高配12核 安卓智能, originalprice=4499.01, promoteprice=3824.16, stock=84, cid=83, createdate=Sun Aug 14 00:44:39 CST 2016, serialVersionUID=1], Product [Hash = 649422116, id=91, name=夏普屏PANDA/熊猫 LE39D71S 39英寸智能WiFi液晶平板电视40 42 43, subtitle=, originalprice=2499.0, promoteprice=1874.25, stock=67, cid=83, createdate=Tue Jul 19 00:45:05 CST 2016, serialVersionUID=1]], productsByRow=[[Product [Hash = 480676270, id=87, name=Konka/康佳 LED32S1卧室32吋安卓智能无线WIFI网络液晶平板电视机, subtitle=32吋电视机 8核智能 网络 全国联保 送货上门, originalprice=1699.0, promoteprice=1104.35, stock=98, cid=83, createdate=Sun Aug 14 00:43:32 CST 2016, serialVersionUID=1], Product [Hash = 208454958, id=88, name=Hisense/海信 LED49EC320A 49吋led液晶电视机智能网络平板电视50, subtitle=新品特惠 十核智能 内置WiFi 咨询有惊喜, originalprice=2799.0, promoteprice=1679.4, stock=90, cid=83, createdate=Fri Jul 29 00:43:38 CST 2016, serialVersionUID=1], Product [Hash = 761306570, id=89, name=Hisense/海信 LED40EC520UA 40英寸4K智能平板液晶电视机WIFI网络, subtitle=周末 特惠 2189 元还送 精美礼品, originalprice=2399.0, promoteprice=1439.4, stock=82, cid=83, createdate=Fri Jul 29 00:44:18 CST 2016, serialVersionUID=1], Product [Hash = 242640573, id=90, name=Changhong/长虹 65S1安卓智能12核65英寸网络平板LED液晶电视机70, subtitle=屏大影院 高配12核 安卓智能, originalprice=4499.01, promoteprice=3824.16, stock=84, cid=83, createdate=Sun Aug 14 00:44:39 CST 2016, serialVersionUID=1], Product [Hash = 649422116, id=91, name=夏普屏PANDA/熊猫 LE39D71S 39英寸智能WiFi液晶平板电视40 42 43, subtitle=, originalprice=2499.0, promoteprice=1874.25, stock=67, cid=83, createdate=Tue Jul 19 00:45:05 CST 2016, serialVersionUID=1]]]}])
2020-06-08 19:27:46.632  INFO 7484 --- [http-nio-8080-exec-2] c.k.t.h.ControllerExceptionHandler       : RequestUrl : http://localhost:8080/web/forehome, Exception : {}

org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:351)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:776)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:681)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:386)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:364)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2137)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(UTF8JsonGenerator.java:1451)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(UTF8JsonGenerator.java:1398)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(UTF8JsonGenerator.java:509)
	at com.fasterxml.jackson.databind.ser.std.StringSerializer.serialize(StringSerializer.java:41)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:722)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:166)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:722)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:166)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:722)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:166)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1433)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:921)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:287)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:287)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:181)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at java.base/sun.nio.ch.SocketDispatcher.write0(Native Method)
	at java.base/sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:54)
	at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:113)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:79)
	at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:50)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:484)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:138)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1253)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:740)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:560)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:504)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:538)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:112)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:190)
	at org.apache.coyote.Response.doWrite(Response.java:601)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:339)
	... 91 common frames omitted

2020-06-08 19:27:46.633  WARN 7484 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。]
2020-06-08 19:27:46.648 ERROR 7484 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:582)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:360)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)

2020-06-08 19:28:18.841 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:28:18.841 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:28:18.888 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:28:18.888 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:28:18.888 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:28:18.934 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:28:18.935 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:28:18.935 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:28:18.981 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:28:18.981 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:28:18.981 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:28:19.031 DEBUG 7484 --- [http-nio-8080-exec-8] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:28:19.031  INFO 7484 --- [http-nio-8080-exec-8] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/listCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.AdminPageController.editCategory', args=[]}
2020-06-08 19:28:19.031  INFO 7484 --- [http-nio-8080-exec-8] com.kinl.tmall.aspect.LogAspect          : result : admin/listCategory
2020-06-08 19:28:19.412 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:28:19.412 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:28:19.459 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:28:19.460 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:28:19.460 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:28:19.512 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:28:19.513 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:28:19.513 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:28:19.560 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:28:19.560 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:28:19.561 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:28:19.609 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:28:19.609  INFO 7484 --- [http-nio-8080-exec-3] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/pageCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.CategoryController.pageCategory', args=[5, 0]}
2020-06-08 19:28:19.609 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.CategoryMapper.queryList   : ==>  Preparing: select * from category limit ?,? 
2020-06-08 19:28:19.609 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.CategoryMapper.queryList   : ==> Parameters: 0(Integer), 5(Integer)
2020-06-08 19:28:19.655 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.CategoryMapper.queryList   : <==      Total: 5
2020-06-08 19:28:19.656 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.CategoryMapper.queryCount  : ==>  Preparing: select count(1) from category 
2020-06-08 19:28:19.656 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.CategoryMapper.queryCount  : ==> Parameters: 
2020-06-08 19:28:19.705 DEBUG 7484 --- [http-nio-8080-exec-3] c.k.tmall.dao.CategoryMapper.queryCount  : <==      Total: 1
2020-06-08 19:28:19.706  INFO 7484 --- [http-nio-8080-exec-3] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=com.kinl.tmall.Utils.Page@156d9803)
2020-06-08 19:30:32.768  INFO 7484 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-08 19:30:32.812  INFO 7484 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-06-08 19:30:32.817  INFO 7484 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-06-08 19:30:37.771  INFO 20404 --- [restartedMain] com.kinl.tmall.TMallApplication          : Starting TMallApplication on linkaijia with PID 20404 (D:\t-mall\t-amll\target\classes started by linkaijia in D:\t-mall\t-amll)
2020-06-08 19:30:37.774 DEBUG 20404 --- [restartedMain] com.kinl.tmall.TMallApplication          : Running with Spring Boot v2.2.6.RELEASE, Spring v5.2.5.RELEASE
2020-06-08 19:30:37.776  INFO 20404 --- [restartedMain] com.kinl.tmall.TMallApplication          : No active profile set, falling back to default profiles: default
2020-06-08 19:30:37.985  INFO 20404 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-06-08 19:30:37.986  INFO 20404 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-06-08 19:30:38.799  INFO 20404 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-08 19:30:38.801  INFO 20404 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-08 19:30:38.841  INFO 20404 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-06-08 19:30:39.072  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'webShiroConfig' of type [com.kinl.tmall.configuration.WebShiroConfig$$EnhancerBySpringCGLIB$$f3f7f066] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.150  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userWebShiroRealm' of type [com.kinl.tmall.Realm.UserWebShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.153  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'credentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.181  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.187  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d0fadb6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.190  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.205  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.227  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.574  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.579  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.581  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.583  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminMapper' of type [com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.584  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sysAdminServiceImpl' of type [com.kinl.tmall.service.impl.SysAdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.585  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'adminWebShiroRealm' of type [com.kinl.tmall.Realm.AdminWebShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.586  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'customizedModularRealmAuthenticator' of type [com.kinl.tmall.configuration.CustomizedModularRealmAuthenticator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.590  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:39.641  INFO 20404 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-08 19:30:40.272  INFO 20404 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-06-08 19:30:40.282  INFO 20404 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-06-08 19:30:40.282  INFO 20404 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-06-08 19:30:40.445  INFO 20404 --- [restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-06-08 19:30:40.451  INFO 20404 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-06-08 19:30:40.451  INFO 20404 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2465 ms
2020-06-08 19:30:41.342  INFO 20404 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-06-08 19:30:42.017  INFO 20404 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-06-08 19:30:42.088  INFO 20404 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-06-08 19:30:42.091  INFO 20404 --- [restartedMain] com.kinl.tmall.TMallApplication          : Started TMallApplication in 4.868 seconds (JVM running for 6.226)
2020-06-08 19:30:42.278  INFO 20404 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-08 19:30:42.280  INFO 20404 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-06-08 19:30:42.293  INFO 20404 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-06-08 19:30:48.653  INFO 20404 --- [http-nio-8080-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-06-08 19:30:49.294  INFO 20404 --- [http-nio-8080-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-06-08 19:30:49.299 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:30:49.315 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:30:49.382 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:30:49.411 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:30:49.412 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:30:49.461 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:30:49.462 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:30:49.462 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:30:49.514 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:30:49.519 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:30:49.520 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:30:49.572 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:30:49.573 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:30:49.573 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:30:49.627 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:30:49.629  INFO 20404 --- [http-nio-8080-exec-2] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/listCategory', ip='127.0.0.1', classMethod='com.kinl.tmall.controller.admin.AdminPageController.editCategory', args=[]}
2020-06-08 19:30:49.632  INFO 20404 --- [http-nio-8080-exec-2] com.kinl.tmall.aspect.LogAspect          : result : admin/listCategory
2020-06-08 19:30:49.969 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:30:49.969 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:30:50.023 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:30:50.024 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:30:50.024 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:30:50.078 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:30:50.082 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:30:50.082 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:30:50.133 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:30:50.134 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:30:50.134 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:30:50.186 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:30:50.186  INFO 20404 --- [http-nio-8080-exec-2] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/pageCategory', ip='0:0:0:0:0:0:0:1', classMethod='com.kinl.tmall.controller.admin.CategoryController.pageCategory', args=[5, 0]}
2020-06-08 19:30:50.193 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.queryList   : ==>  Preparing: select * from category limit ?,? 
2020-06-08 19:30:50.193 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.queryList   : ==> Parameters: 0(Integer), 5(Integer)
2020-06-08 19:30:50.249 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.queryList   : <==      Total: 5
2020-06-08 19:30:50.280 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.queryCount  : ==>  Preparing: select count(1) from category 
2020-06-08 19:30:50.280 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.queryCount  : ==> Parameters: 
2020-06-08 19:30:50.331 DEBUG 20404 --- [http-nio-8080-exec-2] c.k.tmall.dao.CategoryMapper.queryCount  : <==      Total: 1
2020-06-08 19:30:50.332  INFO 20404 --- [http-nio-8080-exec-2] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=com.kinl.tmall.Utils.Page@92e78c9)
2020-06-08 19:31:09.154 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:31:09.154 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:31:09.205 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:31:09.205 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:31:09.206 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:31:09.257 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:31:09.258 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==>  Preparing: select * from sys_admin where name=? 
2020-06-08 19:31:09.258 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : ==> Parameters: kinl(String)
2020-06-08 19:31:09.310 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.SysAdminMapper.findByName  : <==      Total: 1
2020-06-08 19:31:09.310 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==>  Preparing: SELECT permission_name FROM sys_permissions WHERE id IN( SELECT DISTINCT permission_id FROM sys_role_permissions WHERE role_id IN( (SELECT role_id FROM sys_admin_role WHERE admin_id=?))) 
2020-06-08 19:31:09.311 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : ==> Parameters: 1(Integer)
2020-06-08 19:31:09.367 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.t.d.S.findPermissionById             : <==      Total: 4
2020-06-08 19:31:09.367  INFO 20404 --- [http-nio-8080-exec-10] com.kinl.tmall.aspect.LogAspect          : Request : RequestLog{url='http://localhost:8080/admin/pageCategory', ip='127.0.0.1', classMethod='com.kinl.tmall.controller.admin.CategoryController.pageCategory', args=[5, 0]}
2020-06-08 19:31:09.368 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.CategoryMapper.queryList   : ==>  Preparing: select * from category limit ?,? 
2020-06-08 19:31:09.368 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.CategoryMapper.queryList   : ==> Parameters: 0(Integer), 5(Integer)
2020-06-08 19:31:09.424 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.CategoryMapper.queryList   : <==      Total: 5
2020-06-08 19:31:09.426 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.CategoryMapper.queryCount  : ==>  Preparing: select count(1) from category 
2020-06-08 19:31:09.426 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.CategoryMapper.queryCount  : ==> Parameters: 
2020-06-08 19:31:09.479 DEBUG 20404 --- [http-nio-8080-exec-10] c.k.tmall.dao.CategoryMapper.queryCount  : <==      Total: 1
2020-06-08 19:31:09.479  INFO 20404 --- [http-nio-8080-exec-10] com.kinl.tmall.aspect.LogAspect          : result : ResultVO(code=0, message=成功, data=com.kinl.tmall.Utils.Page@1c770be3)
2020-06-08 20:08:02.029  INFO 20404 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-08 20:08:02.096  INFO 20404 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-06-08 20:08:02.102  INFO 20404 --- [SpringContextShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
